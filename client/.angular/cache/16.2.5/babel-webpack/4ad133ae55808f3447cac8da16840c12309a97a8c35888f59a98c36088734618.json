{"ast":null,"code":"import { catchError, map, throwError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SignInService {\n  constructor(http) {\n    this.http = http;\n  }\n  signIn(formValues) {\n    let email = formValues['email'];\n    let username = formValues['username'];\n    let password = formValues['password'];\n    return this.http.post('http://localhost:8080/api/open/auth/login', {\n      email,\n      username,\n      password\n    }).pipe(map(res => res.data), catchError(error => {\n      if (error.error) {\n        return throwError(error.error);\n      }\n      return throwError('An error occurred while processing your request.');\n    }));\n  }\n  static #_ = this.ɵfac = function SignInService_Factory(t) {\n    return new (t || SignInService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SignInService,\n    factory: SignInService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["catchError","map","throwError","SignInService","constructor","http","signIn","formValues","email","username","password","post","pipe","res","data","error","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Ivan\\java\\final_project\\client\\src\\app\\services\\SignInService.ts"],"sourcesContent":["import {HttpClient} from \"@angular/common/http\";\r\nimport {catchError, map, Observable, throwError} from \"rxjs\";\r\nimport {RegisterData} from \"../models/request/RegisterData\";\r\nimport {ResponseData} from \"../models/ResponseData\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {HeaderComponent} from \"../layout/header/header.component\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SignInService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  public signIn(formValues: any): Observable<RegisterData> {\r\n    let email:string = formValues['email'];\r\n    let username:string = formValues['username'];\r\n    let password:string = formValues['password'];\r\n\r\n    return this.http.post<ResponseData<RegisterData>>('http://localhost:8080/api/open/auth/login', {\r\n      email, username, password\r\n    })\r\n      .pipe(\r\n        map(res => res.data),\r\n        catchError(error => {\r\n          if (error.error) {\r\n            return throwError(error.error);\r\n          }\r\n          return throwError('An error occurred while processing your request.');\r\n        })\r\n      );\r\n  }\r\n}\r\n"],"mappings":"AACA,SAAQA,UAAU,EAAEC,GAAG,EAAcC,UAAU,QAAO,MAAM;;;AAS5D,OAAM,MAAOC,aAAa;EAExBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EACxB;EAEOC,MAAMA,CAACC,UAAe;IAC3B,IAAIC,KAAK,GAAUD,UAAU,CAAC,OAAO,CAAC;IACtC,IAAIE,QAAQ,GAAUF,UAAU,CAAC,UAAU,CAAC;IAC5C,IAAIG,QAAQ,GAAUH,UAAU,CAAC,UAAU,CAAC;IAE5C,OAAO,IAAI,CAACF,IAAI,CAACM,IAAI,CAA6B,2CAA2C,EAAE;MAC7FH,KAAK;MAAEC,QAAQ;MAAEC;KAClB,CAAC,CACCE,IAAI,CACHX,GAAG,CAACY,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,EACpBd,UAAU,CAACe,KAAK,IAAG;MACjB,IAAIA,KAAK,CAACA,KAAK,EAAE;QACf,OAAOb,UAAU,CAACa,KAAK,CAACA,KAAK,CAAC;;MAEhC,OAAOb,UAAU,CAAC,kDAAkD,CAAC;IACvE,CAAC,CAAC,CACH;EACL;EAAC,QAAAc,CAAA,G;qBAtBUb,aAAa,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAblB,aAAa;IAAAmB,OAAA,EAAbnB,aAAa,CAAAoB,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}