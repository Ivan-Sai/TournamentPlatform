{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { DatePipe, LowerCasePipe, NgClass, NgIf, NgStyle } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { interval, Subscription } from \"rxjs\";\nexport let TournamentPageComponent = class TournamentPageComponent {\n  constructor(tournamentService, route, router, jwtUtil, tokenService, personalService) {\n    this.tournamentService = tournamentService;\n    this.route = route;\n    this.router = router;\n    this.jwtUtil = jwtUtil;\n    this.tokenService = tokenService;\n    this.personalService = personalService;\n    this.infoLoaded = false;\n    this.imageWindowOpen = false;\n    this.isHasImage = false;\n    this.subscription = new Subscription();\n    this.isStarted = false;\n    this.startDateString = '';\n    this.deleteWindowOpen = false;\n    this.cancelWindowOpen = false;\n    this.authWindowOpen = false;\n    this.tournamentSignupWindowOpen = false;\n    this.route.params.subscribe(value => {\n      this.tournamentId = value['id'];\n    });\n    this.role = this.jwtUtil.getRole();\n  }\n  ngOnInit() {\n    this.tournamentService.getTournament(this.tournamentId).subscribe(data => {\n      this.tournamentRequestData = data;\n      this.infoLoaded = true;\n      this.isStarted = data.isStarted;\n      this.startDateString = new Date(data.startDate).toLocaleString();\n      console.log(this.startDateString);\n      console.log(this.tournamentRequestData);\n      this.getTimeToStartTournament(data);\n    }, error => {\n      if (error.error == \"Tournament not found\") {\n        this.router.navigateByUrl('error/404');\n      }\n    });\n    this.tournamentService.getTournamentLogo(this.tournamentId).subscribe(res => {\n      this.dbImage = 'data:image/jpeg;base64,' + res.data;\n      this.isHasImage = true;\n    });\n  }\n  onImageUpload(event) {\n    if (event && event.target) {\n      // @ts-ignore\n      this.uploadImage = event.target.files[0];\n    }\n  }\n  submitImage() {\n    this.tournamentService.setTournamentImage(this.uploadImage, this.tournamentId).subscribe();\n    location.reload();\n  }\n  goToPage(pageName) {\n    this.router.navigateByUrl(pageName);\n  }\n  getTimeToStartTournament(data) {\n    if (data && data.startDate) {\n      this.tournamentStart = new Date(data.startDate);\n      this.subscription = interval(1000).subscribe(x => {\n        const currentTime = new Date().getTime();\n        if (this.tournamentStart) {\n          this.timeUntilStart = this.tournamentStart.getTime() - currentTime;\n          if (this.timeUntilStart <= 0 && !this.isStarted) {\n            location.reload();\n          }\n        }\n      });\n    }\n  }\n  formatDate(timeUntilStart) {\n    if (timeUntilStart) {\n      const days = Math.floor(timeUntilStart / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(timeUntilStart % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      const minutes = Math.floor(timeUntilStart % (1000 * 60 * 60) / (1000 * 60));\n      const seconds = Math.floor(timeUntilStart % (1000 * 60) / 1000);\n      let result = '';\n      if (days > 0) {\n        result += days + 'd ';\n      }\n      if (hours > 0) {\n        result += hours + 'h ';\n      }\n      if (minutes > 0) {\n        result += minutes + 'm ';\n      }\n      result += seconds + 's';\n      return result.trim();\n    }\n    return undefined;\n  }\n  deleteTournament() {\n    this.tournamentService.deleteTournament(this.tournamentId).subscribe(() => this.router.navigateByUrl('tournaments'));\n  }\n  cancelTournament() {\n    this.tournamentService.cancelTournament(this.tournamentId).subscribe(() => location.reload(), error => console.log(error.error));\n  }\n  signUpTournament() {\n    if (!localStorage.getItem('accessToken')) {\n      this.authWindowOpen = true;\n    } else {\n      this.tournamentSignupWindowOpen = true;\n    }\n  }\n  ngOnDestroy() {\n    if (this.subscription) this.subscription.unsubscribe();\n  }\n};\nTournamentPageComponent = __decorate([Component({\n  selector: 'app-tournament',\n  standalone: true,\n  templateUrl: './tournament-page.component.html',\n  imports: [NgIf, NgClass, FormsModule, NgStyle, DatePipe, LowerCasePipe],\n  styleUrls: ['./tournament-page.component.css']\n})], TournamentPageComponent);","map":{"version":3,"names":["Component","DatePipe","LowerCasePipe","NgClass","NgIf","NgStyle","FormsModule","interval","Subscription","TournamentPageComponent","constructor","tournamentService","route","router","jwtUtil","tokenService","personalService","infoLoaded","imageWindowOpen","isHasImage","subscription","isStarted","startDateString","deleteWindowOpen","cancelWindowOpen","authWindowOpen","tournamentSignupWindowOpen","params","subscribe","value","tournamentId","role","getRole","ngOnInit","getTournament","data","tournamentRequestData","Date","startDate","toLocaleString","console","log","getTimeToStartTournament","error","navigateByUrl","getTournamentLogo","res","dbImage","onImageUpload","event","target","uploadImage","files","submitImage","setTournamentImage","location","reload","goToPage","pageName","tournamentStart","x","currentTime","getTime","timeUntilStart","formatDate","days","Math","floor","hours","minutes","seconds","result","trim","undefined","deleteTournament","cancelTournament","signUpTournament","localStorage","getItem","ngOnDestroy","unsubscribe","__decorate","selector","standalone","templateUrl","imports","styleUrls"],"sources":["C:\\Users\\Ivan\\java\\final_project\\client\\src\\app\\pages\\open\\tournament\\tournament_page\\tournament-page.component.ts"],"sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {TournamentService} from \"../../../../services/TournamentService\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {TournamentRequestData} from \"../../../../models/request/TournamentRequestData\";\r\nimport {DatePipe, LowerCasePipe, NgClass, NgIf, NgStyle} from \"@angular/common\";\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {JwtUtil} from \"../../../../util/JwtUtil\";\r\nimport {interval, Subscription} from \"rxjs\";\r\nimport {error} from \"@angular/compiler-cli/src/transformers/util\";\r\nimport {TokenService} from \"../../../../services/TokenService\";\r\n\r\n@Component({\r\n  selector: 'app-tournament',\r\n  standalone: true,\r\n  templateUrl: './tournament-page.component.html',\r\n  imports: [\r\n    NgIf,\r\n    NgClass,\r\n    FormsModule,\r\n    NgStyle,\r\n    DatePipe,\r\n    LowerCasePipe\r\n  ],\r\n  styleUrls: ['./tournament-page.component.css']\r\n})\r\nexport class TournamentPageComponent implements OnInit,OnDestroy{\r\n\r\n  public infoLoaded: boolean = false;\r\n  public tournamentId : number | undefined ;\r\n  public tournamentRequestData: TournamentRequestData | undefined;\r\n  public imageWindowOpen: boolean = false;\r\n  // @ts-ignore\r\n  public uploadImage :File | undefined;\r\n  public isHasImage: boolean = false;\r\n  public dbImage: string | undefined;\r\n  public role: string | null;\r\n  public tournamentStart: Date | undefined;\r\n  public timeUntilStart: number | undefined;\r\n  private subscription: Subscription = new Subscription();\r\n  public isStarted: boolean = false;\r\n  public startDateString : string = '';\r\n  public deleteWindowOpen: boolean = false;\r\n  public cancelWindowOpen: boolean = false;\r\n  public authWindowOpen: boolean = false;\r\n  public tournamentSignupWindowOpen: boolean = false;\r\n\r\n  constructor(private tournamentService:TournamentService,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private jwtUtil: JwtUtil,\r\n              private tokenService: TokenService,\r\n              public personalService: PersonalService,\r\n              ) {\r\n    this.route.params.subscribe(value => {\r\n      this.tournamentId = value['id']\r\n    })\r\n    this.role = this.jwtUtil.getRole();\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.tournamentService.getTournament(this.tournamentId).subscribe(data => {\r\n      this.tournamentRequestData = data;\r\n      this.infoLoaded = true;\r\n      this.isStarted = data.isStarted;\r\n      this.startDateString = new Date(data.startDate).toLocaleString()\r\n      console.log(this.startDateString)\r\n      console.log(this.tournamentRequestData)\r\n      this.getTimeToStartTournament(data);\r\n    },\r\n    error => {\r\n      if (error.error == \"Tournament not found\") {\r\n        this.router.navigateByUrl('error/404')\r\n      }\r\n    });\r\n    this.tournamentService.getTournamentLogo(this.tournamentId).subscribe( res =>{\r\n      this.dbImage = 'data:image/jpeg;base64,' + res.data;\r\n      this.isHasImage = true;\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  public onImageUpload(event:Event) {\r\n    if (event && event.target){\r\n        // @ts-ignore\r\n        this.uploadImage = event.target.files[0];\r\n      }\r\n  }\r\n  public submitImage() {\r\n    this.tournamentService.setTournamentImage(this.uploadImage, this.tournamentId).subscribe()\r\n    location.reload();\r\n  }\r\n\r\n  public goToPage(pageName: string) {\r\n    this.router.navigateByUrl(pageName)\r\n  }\r\n\r\n  private getTimeToStartTournament(data: TournamentRequestData) {\r\n    if (data && data.startDate) {\r\n      this.tournamentStart = new Date(data.startDate);\r\n      this.subscription = interval(1000).subscribe(x => {\r\n        const currentTime = new Date().getTime();\r\n        if (this.tournamentStart) {\r\n          this.timeUntilStart = this.tournamentStart.getTime() - currentTime;\r\n          if (this.timeUntilStart <= 0 && !this.isStarted) {\r\n            location.reload();\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  formatDate(timeUntilStart: number | undefined) {\r\n    if (timeUntilStart) {\r\n      const days = Math.floor(timeUntilStart / (1000 * 60 * 60 * 24));\r\n      const hours = Math.floor((timeUntilStart % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n      const minutes = Math.floor((timeUntilStart % (1000 * 60 * 60)) / (1000 * 60));\r\n      const seconds = Math.floor((timeUntilStart % (1000 * 60)) / 1000);\r\n\r\n      let result = '';\r\n\r\n      if (days > 0) {\r\n        result += days + 'd ';\r\n      }\r\n      if (hours > 0) {\r\n        result += hours + 'h ';\r\n      }\r\n      if (minutes > 0) {\r\n        result += minutes + 'm ';\r\n      }\r\n      result += seconds + 's';\r\n\r\n      return result.trim();\r\n    }\r\n    return undefined\r\n  }\r\n\r\n\r\n  public deleteTournament() {\r\n    this.tournamentService.deleteTournament(this.tournamentId).subscribe(() =>\r\n      this.router.navigateByUrl('tournaments')\r\n    )\r\n  }\r\n\r\n  public cancelTournament() {\r\n    this.tournamentService.cancelTournament(this.tournamentId).subscribe(() =>\r\n    location.reload()\r\n    ,error => console.log(error.error))\r\n  }\r\n\r\n  public signUpTournament() {\r\n    if (!localStorage.getItem('accessToken')) {\r\n      this.authWindowOpen = true\r\n    }\r\n    else {\r\n\r\n      this.tournamentSignupWindowOpen = true;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription)\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}