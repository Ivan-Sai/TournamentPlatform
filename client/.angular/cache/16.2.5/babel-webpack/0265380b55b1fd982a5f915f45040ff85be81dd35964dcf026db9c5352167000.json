{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { NgClass, NgIf, NgStyle } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nexport let TournamentComponent = class TournamentComponent {\n  constructor(tournamentService, route, router, jwtUtil) {\n    this.tournamentService = tournamentService;\n    this.route = route;\n    this.router = router;\n    this.jwtUtil = jwtUtil;\n    this.infoLoaded = false;\n    this.imageWindowOpen = false;\n    this.isHasImage = false;\n    this.route.params.subscribe(value => {\n      this.tournamentId = value['id'];\n    });\n    this.role = this.jwtUtil.getRole();\n  }\n  ngOnInit() {\n    this.tournamentService.getTournament(this.tournamentId).subscribe(data => {\n      this.tournamentRequestData = data;\n      this.infoLoaded = true;\n      console.log(this.tournamentRequestData);\n    }, error => {\n      if (error.errorMessage == \"Tournament not found\") {\n        this.router.navigateByUrl('error/404');\n      }\n    });\n    this.tournamentService.getTournamentLogo(this.tournamentId).subscribe(res => {\n      this.dbImage = 'data:image/jpeg;base64,' + res.data;\n      this.isHasImage = true;\n    });\n  }\n  onImageUpload(event) {\n    if (event && event.target) {\n      // @ts-ignore\n      this.uploadImage = event.target.files[0];\n    }\n  }\n  submitImage() {\n    this.tournamentService.setTournamentImage(this.uploadImage, this.tournamentId).subscribe();\n    location.reload();\n  }\n  goToPage(pageName) {\n    this.router.navigate([`${pageName}`]);\n  }\n};\nTournamentComponent = __decorate([Component({\n  selector: 'app-tournament',\n  standalone: true,\n  templateUrl: './tournament.component.html',\n  imports: [NgIf, NgClass, FormsModule, NgStyle],\n  styleUrls: ['./tournament.component.css']\n})], TournamentComponent);","map":{"version":3,"names":["Component","NgClass","NgIf","NgStyle","FormsModule","TournamentComponent","constructor","tournamentService","route","router","jwtUtil","infoLoaded","imageWindowOpen","isHasImage","params","subscribe","value","tournamentId","role","getRole","ngOnInit","getTournament","data","tournamentRequestData","console","log","error","errorMessage","navigateByUrl","getTournamentLogo","res","dbImage","onImageUpload","event","target","uploadImage","files","submitImage","setTournamentImage","location","reload","goToPage","pageName","navigate","__decorate","selector","standalone","templateUrl","imports","styleUrls"],"sources":["C:\\Users\\Ivan\\java\\final_project\\client\\src\\app\\pages\\open\\tournament\\tournament.component.ts"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {TournamentService} from \"../../../services/TournamentService\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {TournamentRequestData} from \"../../../models/request/TournamentRequestData\";\r\nimport {NgClass, NgIf, NgStyle} from \"@angular/common\";\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {JwtUtil} from \"../../../util/JwtUtil\";\r\n\r\n@Component({\r\n  selector: 'app-tournament',\r\n  standalone: true,\r\n  templateUrl: './tournament.component.html',\r\n  imports: [\r\n    NgIf,\r\n    NgClass,\r\n    FormsModule,\r\n    NgStyle\r\n  ],\r\n  styleUrls: ['./tournament.component.css']\r\n})\r\nexport class TournamentComponent implements OnInit{\r\n\r\n  public infoLoaded: boolean = false;\r\n  public tournamentId : number | undefined ;\r\n  public tournamentRequestData: TournamentRequestData | undefined;\r\n  public imageWindowOpen: boolean = false;\r\n  // @ts-ignore\r\n  public uploadImage :File | undefined;\r\n  public isHasImage: boolean = false;\r\n  public dbImage: string | undefined;\r\n  public role: string | null;\r\n\r\n  constructor(private tournamentService:TournamentService,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private jwtUtil: JwtUtil\r\n              ) {\r\n    this.route.params.subscribe(value => {\r\n      this.tournamentId = value['id']\r\n    })\r\n    this.role = this.jwtUtil.getRole();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.tournamentService.getTournament(this.tournamentId).subscribe(data => {\r\n        this.tournamentRequestData = data;\r\n        this.infoLoaded = true;\r\n        console.log(this.tournamentRequestData)\r\n      },\r\n      error => {\r\n        if (error.errorMessage == \"Tournament not found\") {\r\n          this.router.navigateByUrl('error/404')\r\n        }\r\n      }\r\n    );\r\n    this.tournamentService.getTournamentLogo(this.tournamentId).subscribe( res =>{\r\n      this.dbImage = 'data:image/jpeg;base64,' + res.data;\r\n      this.isHasImage = true;\r\n      }\r\n    )\r\n  }\r\n\r\n  public onImageUpload(event:Event) {\r\n    if (event && event.target){\r\n        // @ts-ignore\r\n        this.uploadImage = event.target.files[0];\r\n      }\r\n  }\r\n  public submitImage() {\r\n    this.tournamentService.setTournamentImage(this.uploadImage, this.tournamentId).subscribe()\r\n    location.reload();\r\n  }\r\n\r\n  public goToPage(pageName: string) {\r\n    this.router.navigate([`${pageName}`])\r\n  }\r\n\r\n}\r\n"],"mappings":";AAAA,SAAQA,SAAS,QAAe,eAAe;AAI/C,SAAQC,OAAO,EAAEC,IAAI,EAAEC,OAAO,QAAO,iBAAiB;AACtD,SAAQC,WAAW,QAAO,gBAAgB;AAenC,WAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAY9BC,YAAoBC,iBAAmC,EACnCC,KAAqB,EACrBC,MAAc,EACdC,OAAgB;IAHhB,KAAAH,iBAAiB,GAAjBA,iBAAiB;IACjB,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,OAAO,GAAPA,OAAO;IAbpB,KAAAC,UAAU,GAAY,KAAK;IAG3B,KAAAC,eAAe,GAAY,KAAK;IAGhC,KAAAC,UAAU,GAAY,KAAK;IAShC,IAAI,CAACL,KAAK,CAACM,MAAM,CAACC,SAAS,CAACC,KAAK,IAAG;MAClC,IAAI,CAACC,YAAY,GAAGD,KAAK,CAAC,IAAI,CAAC;IACjC,CAAC,CAAC;IACF,IAAI,CAACE,IAAI,GAAG,IAAI,CAACR,OAAO,CAACS,OAAO,EAAE;EACpC;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACb,iBAAiB,CAACc,aAAa,CAAC,IAAI,CAACJ,YAAY,CAAC,CAACF,SAAS,CAACO,IAAI,IAAG;MACrE,IAAI,CAACC,qBAAqB,GAAGD,IAAI;MACjC,IAAI,CAACX,UAAU,GAAG,IAAI;MACtBa,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,qBAAqB,CAAC;IACzC,CAAC,EACDG,KAAK,IAAG;MACN,IAAIA,KAAK,CAACC,YAAY,IAAI,sBAAsB,EAAE;QAChD,IAAI,CAAClB,MAAM,CAACmB,aAAa,CAAC,WAAW,CAAC;;IAE1C,CAAC,CACF;IACD,IAAI,CAACrB,iBAAiB,CAACsB,iBAAiB,CAAC,IAAI,CAACZ,YAAY,CAAC,CAACF,SAAS,CAAEe,GAAG,IAAG;MAC3E,IAAI,CAACC,OAAO,GAAG,yBAAyB,GAAGD,GAAG,CAACR,IAAI;MACnD,IAAI,CAACT,UAAU,GAAG,IAAI;IACtB,CAAC,CACF;EACH;EAEOmB,aAAaA,CAACC,KAAW;IAC9B,IAAIA,KAAK,IAAIA,KAAK,CAACC,MAAM,EAAC;MACtB;MACA,IAAI,CAACC,WAAW,GAAGF,KAAK,CAACC,MAAM,CAACE,KAAK,CAAC,CAAC,CAAC;;EAE9C;EACOC,WAAWA,CAAA;IAChB,IAAI,CAAC9B,iBAAiB,CAAC+B,kBAAkB,CAAC,IAAI,CAACH,WAAW,EAAE,IAAI,CAAClB,YAAY,CAAC,CAACF,SAAS,EAAE;IAC1FwB,QAAQ,CAACC,MAAM,EAAE;EACnB;EAEOC,QAAQA,CAACC,QAAgB;IAC9B,IAAI,CAACjC,MAAM,CAACkC,QAAQ,CAAC,CAAC,GAAGD,QAAQ,EAAE,CAAC,CAAC;EACvC;CAED;AAzDYrC,mBAAmB,GAAAuC,UAAA,EAZ/B5C,SAAS,CAAC;EACT6C,QAAQ,EAAE,gBAAgB;EAC1BC,UAAU,EAAE,IAAI;EAChBC,WAAW,EAAE,6BAA6B;EAC1CC,OAAO,EAAE,CACP9C,IAAI,EACJD,OAAO,EACPG,WAAW,EACXD,OAAO,CACR;EACD8C,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACW5C,mBAAmB,CAyD/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}