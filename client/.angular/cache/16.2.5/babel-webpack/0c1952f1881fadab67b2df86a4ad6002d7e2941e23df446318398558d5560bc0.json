{"ast":null,"code":"import { map } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  signIn(formValues) {\n    let email = formValues['email'];\n    let password = formValues['password'];\n    return this.http.post('http://localhost:8080/api/open/auth/login', {\n      email,\n      password\n    });\n  }\n  signup(formValues) {\n    let email = formValues['email'];\n    let username = formValues['username'];\n    let password = formValues['password1'];\n    return this.http.post('http://localhost:8080/api/open/auth/register', {\n      username,\n      email,\n      password\n    }).pipe(map(res => res.data));\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","AuthService","constructor","http","signIn","formValues","email","password","post","signup","username","pipe","res","data","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Ivan\\java\\final_project\\client\\src\\app\\services\\AuthService.ts"],"sourcesContent":["import {HttpClient} from \"@angular/common/http\";\r\nimport {map, Observable} from \"rxjs\";\r\nimport {RegisterData} from \"../models/request/RegisterData\";\r\nimport {ResponseData} from \"../models/ResponseData\";\r\nimport {Injectable} from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  public signIn(formValues: any): Observable<ResponseData<RegisterData>> {\r\n    let email: string = formValues['email'];\r\n    let password: string = formValues['password'];\r\n\r\n    return this.http.post<ResponseData<RegisterData>>('http://localhost:8080/api/open/auth/login', {\r\n      email, password\r\n    })\r\n  }\r\n\r\n  public signup(formValues: any): Observable<RegisterData> {\r\n    let email: string = formValues['email'];\r\n    let username: string = formValues['username'];\r\n    let password: string = formValues['password1'];\r\n\r\n    return this.http.post<ResponseData<RegisterData>>('http://localhost:8080/api/open/auth/register', {\r\n      username, email, password\r\n    })\r\n      .pipe(\r\n        map(res => res.data)\r\n      );\r\n  }\r\n}\r\n"],"mappings":"AACA,SAAQA,GAAG,QAAmB,MAAM;;;AAQpC,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EACxB;EAEOC,MAAMA,CAACC,UAAe;IAC3B,IAAIC,KAAK,GAAWD,UAAU,CAAC,OAAO,CAAC;IACvC,IAAIE,QAAQ,GAAWF,UAAU,CAAC,UAAU,CAAC;IAE7C,OAAO,IAAI,CAACF,IAAI,CAACK,IAAI,CAA6B,2CAA2C,EAAE;MAC7FF,KAAK;MAAEC;KACR,CAAC;EACJ;EAEOE,MAAMA,CAACJ,UAAe;IAC3B,IAAIC,KAAK,GAAWD,UAAU,CAAC,OAAO,CAAC;IACvC,IAAIK,QAAQ,GAAWL,UAAU,CAAC,UAAU,CAAC;IAC7C,IAAIE,QAAQ,GAAWF,UAAU,CAAC,WAAW,CAAC;IAE9C,OAAO,IAAI,CAACF,IAAI,CAACK,IAAI,CAA6B,8CAA8C,EAAE;MAChGE,QAAQ;MAAEJ,KAAK;MAAEC;KAClB,CAAC,CACCI,IAAI,CACHX,GAAG,CAACY,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CACrB;EACL;EAAC,QAAAC,CAAA,G;qBAzBUb,WAAW,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXlB,WAAW;IAAAmB,OAAA,EAAXnB,WAAW,CAAAoB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}