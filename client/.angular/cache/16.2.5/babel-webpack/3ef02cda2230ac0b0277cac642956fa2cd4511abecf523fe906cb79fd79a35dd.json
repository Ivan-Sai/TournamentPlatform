{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { map } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../util/JwtUtil\";\nexport class TournamentService {\n  constructor(http, jwtUtil) {\n    this.http = http;\n    this.jwtUtil = jwtUtil;\n  }\n  create(formValues, image) {\n    const headers = new HttpHeaders().set(\"Authorization\", \"Bearer \" + localStorage.getItem(\"accessToken\"));\n    const name = formValues['name'];\n    const discipline = formValues['discipline'];\n    const maxTeams = formValues['maxTeams'];\n    const minTeams = formValues['minTeams'];\n    const startDate = formValues['startDate'];\n    const tournamentType = formValues['tournamentType'];\n    const adminId = this.jwtUtil.getId();\n    // console.log('Тип переменной image:', typeof image);\n    // console.log('Содержимое переменной image:', image);\n    // const formData : FormData = new FormData()\n    //\n    // formData.append('name',name);\n    // formData.append('discipline',discipline);\n    // formData.append('maxTeams',maxTeams.toString());\n    // formData.append('minTeams',minTeams.toString());\n    // formData.append('startDate',startDate.toString());\n    // formData.append('tournamentType', tournamentType);\n    // // @ts-ignore\n    // formData.append('adminId', adminId.toString());\n    // formData.append('image', image, image.name);\n    return this.http.post('http://localhost:8080/api/private/admin/tournament', {\n      name,\n      discipline,\n      maxTeams,\n      minTeams,\n      startDate,\n      tournamentType,\n      adminId,\n      image\n    }, {\n      headers: headers.set('Content-Type', 'multipart/form-data')\n    }).pipe(map(res => res.data));\n  }\n  getTournament(id) {\n    return this.http.get('http://localhost:8080/api/open/tournament/' + id).pipe(map(res => res.data));\n  }\n  static #_ = this.ɵfac = function TournamentService_Factory(t) {\n    return new (t || TournamentService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.JwtUtil));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TournamentService,\n    factory: TournamentService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","map","TournamentService","constructor","http","jwtUtil","create","formValues","image","headers","set","localStorage","getItem","name","discipline","maxTeams","minTeams","startDate","tournamentType","adminId","getId","post","pipe","res","data","getTournament","id","get","_","i0","ɵɵinject","i1","HttpClient","i2","JwtUtil","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Ivan\\java\\final_project\\client\\src\\app\\services\\TournamentService.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {map, Observable} from \"rxjs\";\nimport {ResponseData} from \"../models/ResponseData\";\nimport {JwtUtil} from \"../util/JwtUtil\";\nimport {TournamentRequestData} from \"../models/request/TournamentRequestData\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TournamentService {\n\n  constructor(private http:HttpClient,\n              private jwtUtil: JwtUtil,\n  ) { }\n\n\n  public create(formValues: any, image: File): Observable<number> {\n    const headers = new HttpHeaders().set(\"Authorization\", \"Bearer \" + localStorage.getItem(\"accessToken\"))\n\n    const name: string = formValues['name'];\n    const discipline: string = formValues['discipline'];\n    const maxTeams: number = formValues['maxTeams'];\n    const minTeams: number = formValues['minTeams'];\n    const startDate: Date = formValues['startDate'];\n    const tournamentType: string = formValues['tournamentType'];\n    const adminId :number | undefined= this.jwtUtil.getId();\n\n    // console.log('Тип переменной image:', typeof image);\n    // console.log('Содержимое переменной image:', image);\n\n    // const formData : FormData = new FormData()\n    //\n    // formData.append('name',name);\n    // formData.append('discipline',discipline);\n    // formData.append('maxTeams',maxTeams.toString());\n    // formData.append('minTeams',minTeams.toString());\n    // formData.append('startDate',startDate.toString());\n    // formData.append('tournamentType', tournamentType);\n    // // @ts-ignore\n    // formData.append('adminId', adminId.toString());\n    // formData.append('image', image, image.name);\n\n\n    return this.http.post<ResponseData<number>>('http://localhost:8080/api/private/admin/tournament',{\n      name,discipline,maxTeams,minTeams,startDate,tournamentType,adminId,image\n    },{headers: headers.set('Content-Type', 'multipart/form-data')}).pipe(\n      map(res => res.data)\n    )\n  }\n\n  public getTournament(id:number | undefined): Observable<TournamentRequestData> {\n    return this.http.get<ResponseData<TournamentRequestData>>('http://localhost:8080/api/open/tournament/' + id)\n      .pipe(\n        map(res => res.data)\n      )\n  }\n}\n"],"mappings":"AACA,SAAoBA,WAAW,QAAO,sBAAsB;AAC5D,SAAQC,GAAG,QAAmB,MAAM;;;;AAQpC,OAAM,MAAOC,iBAAiB;EAE5BC,YAAoBC,IAAe,EACfC,OAAgB;IADhB,KAAAD,IAAI,GAAJA,IAAI;IACJ,KAAAC,OAAO,GAAPA,OAAO;EACvB;EAGGC,MAAMA,CAACC,UAAe,EAAEC,KAAW;IACxC,MAAMC,OAAO,GAAG,IAAIT,WAAW,EAAE,CAACU,GAAG,CAAC,eAAe,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;IAEvG,MAAMC,IAAI,GAAWN,UAAU,CAAC,MAAM,CAAC;IACvC,MAAMO,UAAU,GAAWP,UAAU,CAAC,YAAY,CAAC;IACnD,MAAMQ,QAAQ,GAAWR,UAAU,CAAC,UAAU,CAAC;IAC/C,MAAMS,QAAQ,GAAWT,UAAU,CAAC,UAAU,CAAC;IAC/C,MAAMU,SAAS,GAASV,UAAU,CAAC,WAAW,CAAC;IAC/C,MAAMW,cAAc,GAAWX,UAAU,CAAC,gBAAgB,CAAC;IAC3D,MAAMY,OAAO,GAAsB,IAAI,CAACd,OAAO,CAACe,KAAK,EAAE;IAEvD;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAGA,OAAO,IAAI,CAAChB,IAAI,CAACiB,IAAI,CAAuB,oDAAoD,EAAC;MAC/FR,IAAI;MAACC,UAAU;MAACC,QAAQ;MAACC,QAAQ;MAACC,SAAS;MAACC,cAAc;MAACC,OAAO;MAACX;KACpE,EAAC;MAACC,OAAO,EAAEA,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE,qBAAqB;IAAC,CAAC,CAAC,CAACY,IAAI,CACnErB,GAAG,CAACsB,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CACrB;EACH;EAEOC,aAAaA,CAACC,EAAqB;IACxC,OAAO,IAAI,CAACtB,IAAI,CAACuB,GAAG,CAAsC,4CAA4C,GAAGD,EAAE,CAAC,CACzGJ,IAAI,CACHrB,GAAG,CAACsB,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CACrB;EACL;EAAC,QAAAI,CAAA,G;qBA9CU1B,iBAAiB,EAAA2B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,OAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjBjC,iBAAiB;IAAAkC,OAAA,EAAjBlC,iBAAiB,CAAAmC,IAAA;IAAAC,UAAA,EAFhB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}