{"ast":null,"code":"import { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../../util/JwtUtil\";\nimport * as i3 from \"../../../services/PersonalService\";\nimport * as i4 from \"../../../services/TeamService\";\nexport class UserProfileComponent {\n  constructor(route, jwtUtil, personalService, teamService, router) {\n    this.route = route;\n    this.jwtUtil = jwtUtil;\n    this.personalService = personalService;\n    this.teamService = teamService;\n    this.router = router;\n    this.isHasImage = false;\n    this.avatarWindowOpen = false;\n    this.leaveTeamWindowOpen = false;\n    this.logoDataMap = {};\n    this.isHasLogoMap = {};\n    this.isLoaded = false;\n    this.route.params.subscribe(value => {\n      this.userId = value['id'];\n      this.ngOnInit();\n    });\n  }\n  ngOnInit() {\n    this.isOwner = this.jwtUtil.getId() == this.userId;\n    this.isLoaded = false;\n    this.personalService.getUserData(this.userId).subscribe(value => {\n      this.userData = value;\n      console.log(this.userData);\n    }, error => {\n      if (error.error == \"User not found\") {\n        this.router.navigateByUrl('error/404');\n      }\n    });\n    this.teams$ = this.personalService.getTeamsByPersonal(this.userId);\n    this.loadLogos();\n    this.personalService.getAvatar(this.userId).subscribe(res => {\n      this.imageUrl = 'data:image/jpeg;base64,' + res.data;\n      this.isHasImage = true;\n    });\n    setTimeout(() => {\n      this.isLoaded = true;\n    }, 500);\n    console.log(this.isOwner);\n  }\n  changeAvatar() {\n    if (this.isOwner) this.avatarWindowOpen = true;\n  }\n  onImageUpload(event) {\n    if (event && event.target) {\n      // @ts-ignore\n      this.uploadImage = event.target.files[0];\n    }\n  }\n  submitImage() {\n    this.avatarWindowOpen = false;\n    this.isHasImage = true;\n    this.personalService.setPersonalAvatar(this.uploadImage, this.userId).subscribe(() => {\n      this.personalService.getAvatar(this.userId).subscribe(res => {\n        this.imageUrl = 'data:image/jpeg;base64,' + res.data;\n        console.log(this.imageUrl);\n      });\n    });\n  }\n  loadLogos() {\n    if (this.teams$) this.teams$.forEach(value => {\n      value.forEach(value1 => {\n        this.teamService.getTeamLogo(value1.id).subscribe(value2 => {\n          this.logoDataMap[value1.id] = 'data:image/jpeg;base64,' + value2.data;\n          this.isHasLogoMap[value1.id] = true;\n        }, error => {\n          this.isHasLogoMap[value1.id] = false;\n        });\n      });\n    });\n  }\n  getLogo(id) {\n    return this.logoDataMap[id];\n  }\n  redirectToPage(url) {\n    this.router.navigateByUrl(url);\n  }\n  openLeaveTeamWindow(name, id) {\n    this.leaveTeamWindowOpen = true;\n    this.leaveTeamName = name.toString();\n    this.leaveTeamId = id;\n  }\n  closeLeaveWindow() {\n    this.leaveTeamWindowOpen = false;\n    this.leaveTeamName = undefined;\n    this.leaveTeamId = undefined;\n  }\n  leaveTeam() {\n    this.teamService.leaveTeam(this.leaveTeamId, this.userId).subscribe(() => {\n      location.reload();\n    });\n  }\n  static #_ = this.ɵfac = function UserProfileComponent_Factory(t) {\n    return new (t || UserProfileComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.JwtUtil), i0.ɵɵdirectiveInject(i3.PersonalService), i0.ɵɵdirectiveInject(i4.TeamService), i0.ɵɵdirectiveInject(i1.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserProfileComponent,\n    selectors: [[\"app-user-profile\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 0,\n    vars: 0,\n    template: function UserProfileComponent_Template(rf, ctx) {},\n    dependencies: [FormsModule, ReactiveFormsModule],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormsModule","ReactiveFormsModule","UserProfileComponent","constructor","route","jwtUtil","personalService","teamService","router","isHasImage","avatarWindowOpen","leaveTeamWindowOpen","logoDataMap","isHasLogoMap","isLoaded","params","subscribe","value","userId","ngOnInit","isOwner","getId","getUserData","userData","console","log","error","navigateByUrl","teams$","getTeamsByPersonal","loadLogos","getAvatar","res","imageUrl","data","setTimeout","changeAvatar","onImageUpload","event","target","uploadImage","files","submitImage","setPersonalAvatar","forEach","value1","getTeamLogo","id","value2","getLogo","redirectToPage","url","openLeaveTeamWindow","name","leaveTeamName","toString","leaveTeamId","closeLeaveWindow","undefined","leaveTeam","location","reload","_","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","JwtUtil","i3","PersonalService","i4","TeamService","Router","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","template","UserProfileComponent_Template","rf","ctx","dependencies","styles"],"sources":["C:\\Users\\Ivan\\java\\final_project\\client\\src\\app\\pages\\open\\user-profile\\user-profile.component.ts"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {JwtUtil} from \"../../../util/JwtUtil\";\nimport {UserData} from \"../../../models/request/UserData\";\nimport {PersonalService} from \"../../../services/PersonalService\";\nimport {AsyncPipe, NgForOf, NgIf, NgStyle} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {Observable} from \"rxjs\";\nimport {TeamService} from \"../../../services/TeamService\";\nimport { TeamData } from 'src/app/models/request/TeamData';\n\n@Component({\n  selector: 'app-user-profile',\n  standalone: true,\n  templateUrl: './user-profile.component.html',\n  imports: [\n    NgStyle,\n    NgIf,\n    FormsModule,\n    ReactiveFormsModule,\n    AsyncPipe,\n    NgForOf\n  ],\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n\n  public userId: number | undefined;\n  public isOwner: boolean | undefined;\n  public userData: UserData | undefined;\n  public imageUrl: string | undefined;\n  public isHasImage: boolean = false;\n  public uploadImage: File | undefined;\n\n  public avatarWindowOpen: boolean = false;\n  public leaveTeamWindowOpen : boolean = false;\n  public teams$ : Observable<TeamData[]> | undefined;\n\n  public logoDataMap: { [key: number]: string } = {};\n  public isHasLogoMap: {[key: number] : boolean} = {}\n  public isLoaded = false;\n  public leaveTeamName: string | undefined;\n  public leaveTeamId: number | undefined;\n\n\n\n  constructor(private route: ActivatedRoute,\n              private jwtUtil: JwtUtil,\n              private personalService:PersonalService,\n              private teamService: TeamService,\n              private router:Router,\n  ) {\n\n\n    this.route.params.subscribe(value => {\n      this.userId = value['id']\n      this.ngOnInit()\n    })\n\n  }\n\n\n  ngOnInit(): void {\n    this.isOwner = this.jwtUtil.getId() == this.userId;\n    this.isLoaded = false;\n    this.personalService.getUserData(this.userId).subscribe(value => {\n      this.userData = value;\n      console.log(this.userData);\n    },error => {\n      if (error.error == \"User not found\") {\n        this.router.navigateByUrl('error/404')\n      }\n    })\n    this.teams$ = this.personalService.getTeamsByPersonal(this.userId);\n    this.loadLogos();\n    this.personalService.getAvatar(this.userId).subscribe( res =>{\n        this.imageUrl = 'data:image/jpeg;base64,' + res.data;\n        this.isHasImage = true;\n\n      }\n    );\n    setTimeout(() => {\n      this.isLoaded = true;\n    }, 500);\n    console.log(this.isOwner)\n  }\n\n\n\n  changeAvatar(){\n    if (this.isOwner)\n    this.avatarWindowOpen = true\n  }\n\n  public onImageUpload(event:Event) {\n    if (event && event.target){\n      // @ts-ignore\n      this.uploadImage = event.target.files[0];\n    }\n  }\n  public submitImage() {\n    this.avatarWindowOpen = false;\n    this.isHasImage = true;\n    this.personalService.setPersonalAvatar(this.uploadImage, this.userId).subscribe(() =>{\n        this.personalService.getAvatar(this.userId).subscribe( res =>{\n            this.imageUrl = 'data:image/jpeg;base64,' + res.data;\n            console.log(this.imageUrl)\n          })\n      }\n    )\n  }\n\n  loadLogos(): void {\n    if (this.teams$)\n    this.teams$.forEach(value => {\n      value.forEach(value1 => {\n        this.teamService.getTeamLogo(value1.id).subscribe(\n          value2 => {\n            this.logoDataMap[value1.id] = 'data:image/jpeg;base64,' + value2.data\n            this.isHasLogoMap[value1.id] = true;\n          }\n          ,error => {\n            this.isHasLogoMap[value1.id] = false\n          }\n        )\n      })\n    })\n\n  }\n  getLogo(id: number): string {\n    return this.logoDataMap[id]\n  }\n\n  redirectToPage(url:string){\n    this.router.navigateByUrl(url);\n  }\n\n  openLeaveTeamWindow(name: String, id: number) {\n    this.leaveTeamWindowOpen = true;\n    this.leaveTeamName = name.toString();\n    this.leaveTeamId = id;\n  }\n  closeLeaveWindow () {\n    this.leaveTeamWindowOpen = false;\n    this.leaveTeamName = undefined;\n    this.leaveTeamId = undefined\n  }\n\n  leaveTeam() {\n    this.teamService.leaveTeam(this.leaveTeamId,this.userId).subscribe(\n      () => {\n        location.reload();\n      }\n    );\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}