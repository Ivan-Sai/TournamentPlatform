{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class HeaderDataService {\n  constructor() {\n    this.accessTokenSource = new BehaviorSubject('');\n    this.currentAccessToken = this.accessTokenSource.asObservable();\n  }\n  changeAccessToken(token) {\n    this.accessTokenSource.next(token);\n  }\n  static #_ = this.ɵfac = function HeaderDataService_Factory(t) {\n    return new (t || HeaderDataService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HeaderDataService,\n    factory: HeaderDataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","HeaderDataService","constructor","accessTokenSource","currentAccessToken","asObservable","changeAccessToken","token","next","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Ivan\\java\\final_project\\client\\src\\app\\services\\HeaderDataService.ts"],"sourcesContent":["// header-data.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HeaderDataService {\r\n  private accessTokenSource = new BehaviorSubject<string | null>('');\r\n  currentAccessToken = this.accessTokenSource.asObservable();\r\n\r\n  changeAccessToken(token: string| null) {\r\n    this.accessTokenSource.next(token);\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAASA,eAAe,QAAoB,MAAM;;AAKlD,OAAM,MAAOC,iBAAiB;EAH9BC,YAAA;IAIU,KAAAC,iBAAiB,GAAG,IAAIH,eAAe,CAAgB,EAAE,CAAC;IAClE,KAAAI,kBAAkB,GAAG,IAAI,CAACD,iBAAiB,CAACE,YAAY,EAAE;;EAE1DC,iBAAiBA,CAACC,KAAmB;IACnC,IAAI,CAACJ,iBAAiB,CAACK,IAAI,CAACD,KAAK,CAAC;EACpC;EAAC,QAAAE,CAAA,G;qBANUR,iBAAiB;EAAA;EAAA,QAAAS,EAAA,G;WAAjBT,iBAAiB;IAAAU,OAAA,EAAjBV,iBAAiB,CAAAW,IAAA;IAAAC,UAAA,EAFhB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}