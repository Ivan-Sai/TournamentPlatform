{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { map } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../util/JwtUtil\";\nexport class TournamentService {\n  constructor(http, jwtUtil) {\n    this.http = http;\n    this.jwtUtil = jwtUtil;\n  }\n  create(formValues) {\n    const headers = new HttpHeaders().set(\"Authorization\", \"Bearer \" + localStorage.getItem(\"accessToken\"));\n    const name = formValues['name'];\n    const discipline = formValues['discipline'];\n    const maxTeams = formValues['maxTeams'];\n    const minTeams = formValues['minTeams'];\n    const startDate = formValues['startDate'];\n    const tournamentType = formValues['tournamentType'];\n    const adminId = this.jwtUtil.getId();\n    return this.http.post('http://localhost:8080/api/private/admin/tournament', {\n      name,\n      discipline,\n      maxTeams,\n      minTeams,\n      startDate,\n      adminId,\n      tournamentType\n    }, {\n      headers: headers\n    }).pipe(map(res => res.data));\n  }\n  setTournamentImage(image, id) {\n    const headers = new HttpHeaders().set(\"Authorization\", \"Bearer \" + localStorage.getItem(\"accessToken\"));\n    const formData = new FormData();\n    if (image) formData.append('image', image, image.name);\n    return this.http.put('http://localhost:8080/api/private/admin/tournament/' + id + '/image', formData, {\n      headers: headers\n    });\n  }\n  getTournament(id) {\n    return this.http.get('http://localhost:8080/api/open/tournament/' + id).pipe(map(res => res.data));\n  }\n  getTournamentLogo(tournamentId) {\n    return this.http.get('http://localhost:8080/api/open/tournament/' + tournamentId + '/logo');\n  }\n  deleteTournament(tournamentId) {\n    const headers = new HttpHeaders().set(\"Authorization\", \"Bearer \" + localStorage.getItem(\"accessToken\"));\n    return this.http.delete('http://localhost:8080/api/private/admin/tournament/' + tournamentId, {\n      headers: headers\n    });\n  }\n  cancelTournament(tournamentId) {\n    const headers = new HttpHeaders().set(\"Authorization\", \"Bearer \" + localStorage.getItem(\"accessToken\"));\n    return this.http.put('http://localhost:8080/api/private/admin/tournament/cancel/' + tournamentId, {}, {\n      headers: headers\n    });\n  }\n  getALlTournaments() {\n    return this.http.get('http://localhost:8080/api/open/tournament');\n  }\n  static #_ = this.ɵfac = function TournamentService_Factory(t) {\n    return new (t || TournamentService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.JwtUtil));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TournamentService,\n    factory: TournamentService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","map","TournamentService","constructor","http","jwtUtil","create","formValues","headers","set","localStorage","getItem","name","discipline","maxTeams","minTeams","startDate","tournamentType","adminId","getId","post","pipe","res","data","setTournamentImage","image","id","formData","FormData","append","put","getTournament","get","getTournamentLogo","tournamentId","deleteTournament","delete","cancelTournament","getALlTournaments","_","i0","ɵɵinject","i1","HttpClient","i2","JwtUtil","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Ivan\\java\\final_project\\client\\src\\app\\services\\TournamentService.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {map, Observable} from \"rxjs\";\r\nimport {ResponseData} from \"../models/ResponseData\";\r\nimport {RegisterData} from \"../models/request/RegisterData\";\r\nimport {FormControl, Validators} from \"@angular/forms\";\r\nimport {JwtUtil} from \"../util/JwtUtil\";\r\nimport {TournamentRequestData} from \"../models/request/TournamentRequestData\";\r\nimport {ImageData} from \"../models/request/ImageData\";\r\nimport {AllTournamentRequestData} from \"../models/request/AllTournamentRequestData\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TournamentService {\r\n\r\n  constructor(private http:HttpClient,\r\n              private jwtUtil: JwtUtil,\r\n  ) { }\r\n\r\n\r\n  public create(formValues: any): Observable<number> {\r\n    const headers = new HttpHeaders().set(\"Authorization\", \"Bearer \" + localStorage.getItem(\"accessToken\"))\r\n\r\n    const name: string = formValues['name'];\r\n    const discipline: string = formValues['discipline'];\r\n    const maxTeams: number = formValues['maxTeams'];\r\n    const minTeams: number = formValues['minTeams'];\r\n    const startDate: Date = formValues['startDate'];\r\n    const tournamentType: string = formValues['tournamentType'];\r\n    const adminId :number | undefined= this.jwtUtil.getId();\r\n\r\n    return this.http.post<ResponseData<number>>('http://localhost:8080/api/private/admin/tournament', {\r\n      name, discipline, maxTeams, minTeams, startDate, adminId,tournamentType\r\n    },{headers: headers}).pipe(\r\n      map(res => res.data)\r\n    )\r\n  }\r\n  public setTournamentImage(image: File | undefined, id: number | undefined){\r\n    const headers = new HttpHeaders().set(\"Authorization\", \"Bearer \" + localStorage.getItem(\"accessToken\"))\r\n\r\n    const formData = new FormData();\r\n    if (image) formData.append('image', image, image.name)\r\n    return this.http.put<ResponseData<any>>('http://localhost:8080/api/private/admin/tournament/'+ id +'/image', formData, {headers: headers});\r\n  }\r\n\r\n  public getTournament(id:number | undefined): Observable<TournamentRequestData> {\r\n    return this.http.get<ResponseData<TournamentRequestData>>('http://localhost:8080/api/open/tournament/' + id)\r\n      .pipe(\r\n        map(res => res.data)\r\n      )\r\n  }\r\n\r\n  getTournamentLogo(tournamentId: number | undefined) {\r\n    return this.http.get<ImageData>('http://localhost:8080/api/open/tournament/' + tournamentId + '/logo')\r\n  }\r\n\r\n  deleteTournament(tournamentId: number | undefined) {\r\n    const headers = new HttpHeaders().set(\"Authorization\", \"Bearer \" + localStorage.getItem(\"accessToken\"))\r\n    return this.http.delete('http://localhost:8080/api/private/admin/tournament/' + tournamentId, {headers : headers})\r\n  }\r\n\r\n  cancelTournament(tournamentId: number | undefined) {\r\n    const headers = new HttpHeaders().set(\"Authorization\", \"Bearer \" + localStorage.getItem(\"accessToken\"))\r\n    return this.http.put('http://localhost:8080/api/private/admin/tournament/cancel/' + tournamentId, {},{headers: headers})\r\n  }\r\n\r\n  getALlTournaments(): Observable<AllTournamentRequestData> {\r\n    return this.http.get<AllTournamentRequestData>('http://localhost:8080/api/open/tournament')\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}