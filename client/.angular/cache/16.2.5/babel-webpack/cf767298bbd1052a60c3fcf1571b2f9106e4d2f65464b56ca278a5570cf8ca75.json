{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../util/JwtUtil\";\nexport class PersonalService {\n  constructor(http, jwtUtil) {\n    this.http = http;\n    this.jwtUtil = jwtUtil;\n  }\n  getTeamsByPersonal() {\n    const headers = new HttpHeaders().set(\"Authorization\", \"Bearer \" + localStorage.getItem(\"accessToken\"));\n    const id = this.jwtUtil.getId();\n    return this.http.get('http://localhost:8080/api/private/personal/' + id + '/teams', {\n      headers: headers\n    });\n  }\n  getUserData(userId) {\n    const headers = new HttpHeaders().set(\"Authorization\", \"Bearer \" + localStorage.getItem(\"accessToken\"));\n    return this.http.get('http://localhost:8080/api/private/personal/' + userId, {\n      headers: headers\n    });\n  }\n  static #_ = this.ɵfac = function PersonalService_Factory(t) {\n    return new (t || PersonalService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.JwtUtil));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PersonalService,\n    factory: PersonalService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","PersonalService","constructor","http","jwtUtil","getTeamsByPersonal","headers","set","localStorage","getItem","id","getId","get","getUserData","userId","_","i0","ɵɵinject","i1","HttpClient","i2","JwtUtil","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Ivan\\java\\final_project\\client\\src\\app\\services\\PersonalService.ts"],"sourcesContent":["import {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {JwtUtil} from \"../util/JwtUtil\";\r\nimport {Observable} from \"rxjs\";\r\nimport {TeamData} from \"../models/request/TeamData\";\r\nimport {UserData} from \"../models/request/UserData\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PersonalService {\r\n\r\n  constructor(private http: HttpClient,\r\n              private jwtUtil: JwtUtil) {\r\n  }\r\n\r\n  getTeamsByPersonal(): Observable<TeamData[]> {\r\n    const headers = new HttpHeaders().set(\"Authorization\", \"Bearer \" + localStorage.getItem(\"accessToken\"))\r\n    const id = this.jwtUtil.getId()\r\n    return this.http.get<TeamData[]>('http://localhost:8080/api/private/personal/'+ id +'/teams',{headers: headers})\r\n  }\r\n\r\n  getUserData(userId: number | undefined) {\r\n    const headers = new HttpHeaders().set(\"Authorization\", \"Bearer \" + localStorage.getItem(\"accessToken\"))\r\n    return this.http.get<UserData>('http://localhost:8080/api/private/personal/'+ userId,{headers: headers})\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAAoBA,WAAW,QAAO,sBAAsB;;;;AAU5D,OAAM,MAAOC,eAAe;EAE1BC,YAAoBC,IAAgB,EAChBC,OAAgB;IADhB,KAAAD,IAAI,GAAJA,IAAI;IACJ,KAAAC,OAAO,GAAPA,OAAO;EAC3B;EAEAC,kBAAkBA,CAAA;IAChB,MAAMC,OAAO,GAAG,IAAIN,WAAW,EAAE,CAACO,GAAG,CAAC,eAAe,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;IACvG,MAAMC,EAAE,GAAG,IAAI,CAACN,OAAO,CAACO,KAAK,EAAE;IAC/B,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAa,6CAA6C,GAAEF,EAAE,GAAE,QAAQ,EAAC;MAACJ,OAAO,EAAEA;IAAO,CAAC,CAAC;EAClH;EAEAO,WAAWA,CAACC,MAA0B;IACpC,MAAMR,OAAO,GAAG,IAAIN,WAAW,EAAE,CAACO,GAAG,CAAC,eAAe,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;IACvG,OAAO,IAAI,CAACN,IAAI,CAACS,GAAG,CAAW,6CAA6C,GAAEE,MAAM,EAAC;MAACR,OAAO,EAAEA;IAAO,CAAC,CAAC;EAC1G;EAAC,QAAAS,CAAA,G;qBAfUd,eAAe,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,OAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfrB,eAAe;IAAAsB,OAAA,EAAftB,eAAe,CAAAuB,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}