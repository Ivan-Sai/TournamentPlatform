{"ast":null,"code":"import { FormsModule } from \"@angular/forms\";\nimport { TournamentAllListComponent } from \"../tournament-all-list/tournament-all-list.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../services/TournamentService\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class TournamentsAllComponent {\n  constructor(tournamentService, router, route) {\n    this.tournamentService = tournamentService;\n    this.router = router;\n    this.route = route;\n    this.tournaments$ = this.tournamentService.getALlTournaments(null, null);\n    this.logoDataMap = {};\n    this.isHasLogoMap = {};\n    this.selectedFilter = 'upcoming';\n    this.selectedDiscipline = 'all';\n    this.isRefresh = false;\n  }\n  ngOnInit() {}\n  handleSelection() {\n    this.isRefresh = false;\n    this.router.navigateByUrl('tournaments?filter=' + this.selectedFilter + '&discipline=' + this.selectedDiscipline);\n  }\n  refreshFilters(url) {\n    this.router.navigateByUrl(url);\n    this.isRefresh = true;\n  }\n  static #_ = this.ɵfac = function TournamentsAllComponent_Factory(t) {\n    return new (t || TournamentsAllComponent)(i0.ɵɵdirectiveInject(i1.TournamentService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TournamentsAllComponent,\n    selectors: [[\"app-tournaments-all\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 23,\n    vars: 4,\n    consts: [[1, \"flex\", \"flex-col\", 2, \"min-height\", \"calc(100vh - 5rem)\", \"background\", \"rgb(2,0,36)\", \"background\", \"linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(3,56,91,1) 81%)\"], [1, \"flex\", \"mt-3\"], [1, \"fa-solid\", \"mx-5\", \"fa-trophy\", \"text-5xl\", \"text-cyan-500\", 2, \"margin-right\", \"5%\"], [1, \"text-4xl\", \"text-blue-200\", \"font-bold\"], [1, \"flex\", \"justify-center\", \"items-center\"], [1, \"fa-solid\", \"fa-arrows-rotate\", \"mr-5\", \"text-lg\", \"cursor-pointer\", \"text-cyan-500\", 3, \"click\"], [3, \"ngModel\", \"ngModelChange\", \"change\"], [\"value\", \"all\", 3, \"selected\"], [\"value\", \"upcoming\"], [\"value\", \"past\"], [\"value\", \"dota\"], [\"value\", \"cs\"]],\n    template: function TournamentsAllComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementContainerStart(0);\n        i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1);\n        i0.ɵɵelement(3, \"i\", 2);\n        i0.ɵɵelementStart(4, \"p\", 3);\n        i0.ɵɵtext(5, \"Tournaments\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"i\", 5);\n        i0.ɵɵlistener(\"click\", function TournamentsAllComponent_Template_i_click_7_listener() {\n          return ctx.refreshFilters(\"tournaments\");\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"select\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function TournamentsAllComponent_Template_select_ngModelChange_8_listener($event) {\n          return ctx.selectedFilter = $event;\n        })(\"change\", function TournamentsAllComponent_Template_select_change_8_listener() {\n          return ctx.handleSelection();\n        });\n        i0.ɵɵelementStart(9, \"option\", 7);\n        i0.ɵɵtext(10, \"All\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"option\", 8);\n        i0.ɵɵtext(12, \"Upcoming\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"option\", 9);\n        i0.ɵɵtext(14, \"Past\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"select\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function TournamentsAllComponent_Template_select_ngModelChange_15_listener($event) {\n          return ctx.selectedDiscipline = $event;\n        })(\"change\", function TournamentsAllComponent_Template_select_change_15_listener() {\n          return ctx.handleSelection();\n        });\n        i0.ɵɵelementStart(16, \"option\", 7);\n        i0.ɵɵtext(17, \"All\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"option\", 10);\n        i0.ɵɵtext(19, \"Dota 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"option\", 11);\n        i0.ɵɵtext(21, \"CS 2\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(22, \"app-tournament-all-list\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementContainerEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedFilter);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"selected\", ctx.isRefresh && ctx.selectedFilter == \"upcoming\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedDiscipline);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"selected\", ctx.isRefresh);\n      }\n    },\n    dependencies: [FormsModule, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel, TournamentAllListComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormsModule","TournamentAllListComponent","TournamentsAllComponent","constructor","tournamentService","router","route","tournaments$","getALlTournaments","logoDataMap","isHasLogoMap","selectedFilter","selectedDiscipline","isRefresh","ngOnInit","handleSelection","navigateByUrl","refreshFilters","url","_","i0","ɵɵdirectiveInject","i1","TournamentService","i2","Router","ActivatedRoute","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","TournamentsAllComponent_Template","rf","ctx","ɵɵelementContainerStart","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","TournamentsAllComponent_Template_i_click_7_listener","TournamentsAllComponent_Template_select_ngModelChange_8_listener","$event","TournamentsAllComponent_Template_select_change_8_listener","TournamentsAllComponent_Template_select_ngModelChange_15_listener","TournamentsAllComponent_Template_select_change_15_listener","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","i3","NgSelectOption","ɵNgSelectMultipleOption","SelectControlValueAccessor","NgControlStatus","NgModel","styles"],"sources":["C:\\Users\\Ivan\\java\\final_project\\client\\src\\app\\pages\\open\\tournament\\tournaments-all\\tournaments-all.component.ts","C:\\Users\\Ivan\\java\\final_project\\client\\src\\app\\pages\\open\\tournament\\tournaments-all\\tournaments-all.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {AllTournamentRequestData} from \"../../../../models/request/AllTournamentRequestData\";\nimport {TournamentService} from \"../../../../services/TournamentService\";\nimport {AsyncPipe, NgForOf, NgIf, NgStyle} from \"@angular/common\";\nimport {Observable} from \"rxjs\";\nimport {TournamentRequestData} from \"../../../../models/request/TournamentRequestData\";\nimport {data} from \"autoprefixer\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {FormsModule} from \"@angular/forms\";\nimport {TournamentAllListComponent} from \"../tournament-all-list/tournament-all-list.component\";\n\n@Component({\n  selector: 'app-tournaments-all',\n  templateUrl: './tournaments-all.component.html',\n  standalone: true,\n  imports: [\n    NgForOf,\n    AsyncPipe,\n    NgIf,\n    NgStyle,\n    FormsModule,\n    TournamentAllListComponent\n  ],\n  styleUrls: ['./tournaments-all.component.css']\n})\nexport class TournamentsAllComponent implements OnInit{\n\n  public tournaments$: Observable<TournamentRequestData[]> = this.tournamentService.getALlTournaments(null, null);\n  public logoDataMap: { [key: number]: string } = {};\n  public isHasLogoMap: {[key: number] : boolean} = {}\n  selectedFilter: string = 'upcoming';\n  selectedDiscipline: string = 'all';\n  public isRefresh = false;\n\n\n  constructor(private tournamentService: TournamentService,\n              private router:Router,\n              private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n  }\n\n\n\n  handleSelection() {\n    this.isRefresh = false;\n    this.router.navigateByUrl('tournaments?filter=' + this.selectedFilter + '&discipline=' + this.selectedDiscipline);\n  }\n\n  refreshFilters(url: string) {\n    this.router.navigateByUrl(url);\n    this.isRefresh = true;\n  }\n}\n","<ng-container>\n  <div class=\"flex flex-col\" style=\"min-height: calc(100vh - 5rem);\n                                             background: rgb(2,0,36);\n                                             background: linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(3,56,91,1) 81%);\">\n    <div class=\"flex mt-3\">\n      <i class=\"fa-solid mx-5 fa-trophy text-5xl text-cyan-500\" style=\"margin-right: 5%\"></i>\n      <p class=\"text-4xl text-blue-200 font-bold\">Tournaments</p>\n    </div>\n\n    <div class=\"flex justify-center items-center\">\n      <i class=\"fa-solid fa-arrows-rotate mr-5 text-lg cursor-pointer text-cyan-500\" (click)=\"refreshFilters('tournaments')\"></i>\n      <select [(ngModel)]=\"selectedFilter\" (change)=\"handleSelection()\">\n        <option [selected]=\"isRefresh && selectedFilter == 'upcoming'\" value=\"all\">All</option>\n        <option value=\"upcoming\">Upcoming</option>\n        <option value=\"past\">Past</option>\n      </select>\n      <select [(ngModel)]=\"selectedDiscipline\" (change)=\"handleSelection()\">\n        <option [selected]=\"isRefresh\" value=\"all\">All</option>\n        <option value=\"dota\">Dota 2</option>\n        <option value=\"cs\">CS 2</option>\n      </select>\n    </div>\n    <app-tournament-all-list></app-tournament-all-list>\n  </div>\n</ng-container>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}