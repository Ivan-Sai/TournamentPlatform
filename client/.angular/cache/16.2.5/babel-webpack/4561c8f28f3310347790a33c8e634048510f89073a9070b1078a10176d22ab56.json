{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { AsyncPipe, NgForOf, NgIf } from \"@angular/common\";\nexport let TournamentSignInComponent = class TournamentSignInComponent {\n  constructor(tournamentSignInService, personalService, teamService, jwtUtil, router) {\n    this.tournamentSignInService = tournamentSignInService;\n    this.personalService = personalService;\n    this.teamService = teamService;\n    this.jwtUtil = jwtUtil;\n    this.router = router;\n    this.tournamentSignupWindowOpen = false;\n    this.teams$ = this.personalService.getTeamsByPersonal(this.jwtUtil.getId());\n    this.logoDataMap = {};\n    this.isHasLogoMap = {};\n    this.tournamentSignInService.tournamentSignupWindowOpen$.subscribe(value => {\n      this.tournamentSignupWindowOpen = value;\n    });\n  }\n  ngOnInit() {\n    this.loadLogos();\n  }\n  loadLogos() {\n    this.teams$.forEach(value => {\n      value.forEach(value1 => {\n        this.teamService.getTeamLogo(value1.id).subscribe(value2 => {\n          this.logoDataMap[value1.id] = 'data:image/jpeg;base64,' + value2.data;\n          this.isHasLogoMap[value1.id] = true;\n        }, error => {\n          this.isHasLogoMap[value1.id] = false;\n        });\n      });\n    });\n  }\n  getLogo(id) {\n    return this.logoDataMap[id];\n  }\n  redirectToPage(url) {\n    this.router.navigateByUrl(url);\n  }\n};\nTournamentSignInComponent = __decorate([Component({\n  selector: 'app-tournament-sign-in',\n  templateUrl: './tournament-sign-in.component.html',\n  standalone: true,\n  imports: [NgForOf, NgIf, AsyncPipe],\n  styleUrls: ['./tournament-sign-in.component.css']\n})], TournamentSignInComponent);","map":{"version":3,"names":["Component","AsyncPipe","NgForOf","NgIf","TournamentSignInComponent","constructor","tournamentSignInService","personalService","teamService","jwtUtil","router","tournamentSignupWindowOpen","teams$","getTeamsByPersonal","getId","logoDataMap","isHasLogoMap","tournamentSignupWindowOpen$","subscribe","value","ngOnInit","loadLogos","forEach","value1","getTeamLogo","id","value2","data","error","getLogo","redirectToPage","url","navigateByUrl","__decorate","selector","templateUrl","standalone","imports","styleUrls"],"sources":["C:\\Users\\Ivan\\java\\final_project\\client\\src\\app\\shared\\tournament-sign-in\\tournament-sign-in.component.ts"],"sourcesContent":["import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {AsyncPipe, NgForOf, NgIf} from \"@angular/common\";\nimport {TournamentSignInService} from \"../../services/TournamentSigninService\";\nimport {PersonalService} from \"../../services/PersonalService\";\nimport {TeamService} from \"../../services/TeamService\";\nimport {JwtUtil} from \"../../util/JwtUtil\";\nimport {Router} from \"@angular/router\";\n\n\n@Component({\n  selector: 'app-tournament-sign-in',\n  templateUrl: './tournament-sign-in.component.html',\n  standalone: true,\n  imports: [\n    NgForOf,\n    NgIf,\n    AsyncPipe\n  ],\n  styleUrls: ['./tournament-sign-in.component.css']\n})\nexport class TournamentSignInComponent implements OnInit{\n  tournamentSignupWindowOpen = false;\n  teams$ = this.personalService.getTeamsByPersonal(this.jwtUtil.getId());\n  public logoDataMap: { [key: number]: string } = {};\n  public isHasLogoMap: {[key: number] : boolean} = {}\n\n\n  constructor(public tournamentSignInService: TournamentSignInService,\n              private personalService: PersonalService,\n              private teamService: TeamService,\n              private jwtUtil:JwtUtil,\n              private router: Router,\n              ) {\n\n    this.tournamentSignInService.tournamentSignupWindowOpen$.subscribe((value) => {\n      this.tournamentSignupWindowOpen = value;\n    });\n  }\n\n\n\n  ngOnInit(): void {\n        this.loadLogos()\n    }\n\n  loadLogos(): void {\n    this.teams$.forEach(value => {\n      value.forEach(value1 => {\n        this.teamService.getTeamLogo(value1.id).subscribe(\n          value2 => {\n            this.logoDataMap[value1.id] = 'data:image/jpeg;base64,' + value2.data\n            this.isHasLogoMap[value1.id] = true;\n          }\n          ,error => {\n            this.isHasLogoMap[value1.id] = false\n          }\n        )\n      })\n    })\n\n  }\n  getLogo(id: number): string {\n    return this.logoDataMap[id]\n  }\n\n  redirectToPage(url:string){\n    this.router.navigateByUrl(url);\n  }\n\n}\n"],"mappings":";AAAA,SAAQA,SAAS,QAA4C,eAAe;AAC5E,SAAQC,SAAS,EAAEC,OAAO,EAAEC,IAAI,QAAO,iBAAiB;AAmBjD,WAAMC,yBAAyB,GAA/B,MAAMA,yBAAyB;EAOpCC,YAAmBC,uBAAgD,EAC/CC,eAAgC,EAChCC,WAAwB,EACxBC,OAAe,EACfC,MAAc;IAJf,KAAAJ,uBAAuB,GAAvBA,uBAAuB;IACtB,KAAAC,eAAe,GAAfA,eAAe;IACf,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,OAAO,GAAPA,OAAO;IACP,KAAAC,MAAM,GAANA,MAAM;IAV1B,KAAAC,0BAA0B,GAAG,KAAK;IAClC,KAAAC,MAAM,GAAG,IAAI,CAACL,eAAe,CAACM,kBAAkB,CAAC,IAAI,CAACJ,OAAO,CAACK,KAAK,EAAE,CAAC;IAC/D,KAAAC,WAAW,GAA8B,EAAE;IAC3C,KAAAC,YAAY,GAA8B,EAAE;IAUjD,IAAI,CAACV,uBAAuB,CAACW,2BAA2B,CAACC,SAAS,CAAEC,KAAK,IAAI;MAC3E,IAAI,CAACR,0BAA0B,GAAGQ,KAAK;IACzC,CAAC,CAAC;EACJ;EAIAC,QAAQA,CAAA;IACF,IAAI,CAACC,SAAS,EAAE;EACpB;EAEFA,SAASA,CAAA;IACP,IAAI,CAACT,MAAM,CAACU,OAAO,CAACH,KAAK,IAAG;MAC1BA,KAAK,CAACG,OAAO,CAACC,MAAM,IAAG;QACrB,IAAI,CAACf,WAAW,CAACgB,WAAW,CAACD,MAAM,CAACE,EAAE,CAAC,CAACP,SAAS,CAC/CQ,MAAM,IAAG;UACP,IAAI,CAACX,WAAW,CAACQ,MAAM,CAACE,EAAE,CAAC,GAAG,yBAAyB,GAAGC,MAAM,CAACC,IAAI;UACrE,IAAI,CAACX,YAAY,CAACO,MAAM,CAACE,EAAE,CAAC,GAAG,IAAI;QACrC,CAAC,EACAG,KAAK,IAAG;UACP,IAAI,CAACZ,YAAY,CAACO,MAAM,CAACE,EAAE,CAAC,GAAG,KAAK;QACtC,CAAC,CACF;MACH,CAAC,CAAC;IACJ,CAAC,CAAC;EAEJ;EACAI,OAAOA,CAACJ,EAAU;IAChB,OAAO,IAAI,CAACV,WAAW,CAACU,EAAE,CAAC;EAC7B;EAEAK,cAAcA,CAACC,GAAU;IACvB,IAAI,CAACrB,MAAM,CAACsB,aAAa,CAACD,GAAG,CAAC;EAChC;CAED;AAjDY3B,yBAAyB,GAAA6B,UAAA,EAXrCjC,SAAS,CAAC;EACTkC,QAAQ,EAAE,wBAAwB;EAClCC,WAAW,EAAE,qCAAqC;EAClDC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CACPnC,OAAO,EACPC,IAAI,EACJF,SAAS,CACV;EACDqC,SAAS,EAAE,CAAC,oCAAoC;CACjD,CAAC,C,EACWlC,yBAAyB,CAiDrC"},"metadata":{},"sourceType":"module","externalDependencies":[]}