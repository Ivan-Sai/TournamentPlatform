{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { DatePipe, LowerCasePipe, NgClass, NgIf, NgStyle } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { interval, Subscription } from \"rxjs\";\nexport let TournamentComponent = class TournamentComponent {\n  constructor(tournamentService, route, router, jwtUtil) {\n    this.tournamentService = tournamentService;\n    this.route = route;\n    this.router = router;\n    this.jwtUtil = jwtUtil;\n    this.infoLoaded = false;\n    this.imageWindowOpen = false;\n    this.isHasImage = false;\n    this.subscription = new Subscription();\n    this.isStarted = false;\n    this.startDateString = '';\n    this.deleteWindowOpen = true;\n    this.route.params.subscribe(value => {\n      this.tournamentId = value['id'];\n    });\n    this.role = this.jwtUtil.getRole();\n  }\n  ngOnInit() {\n    this.tournamentService.getTournament(this.tournamentId).subscribe(data => {\n      this.tournamentRequestData = data;\n      this.infoLoaded = true;\n      this.isStarted = data.isStarted;\n      this.startDateString = new Date(data.startDate).toLocaleString();\n      console.log(this.startDateString);\n      console.log(this.tournamentRequestData);\n      this.getTimeToStartTournament(data);\n    }, error => {\n      if (error.errorMessage == \"Tournament not found\") {\n        this.router.navigateByUrl('error/404');\n      }\n    });\n    this.tournamentService.getTournamentLogo(this.tournamentId).subscribe(res => {\n      this.dbImage = 'data:image/jpeg;base64,' + res.data;\n      this.isHasImage = true;\n    });\n  }\n  onImageUpload(event) {\n    if (event && event.target) {\n      // @ts-ignore\n      this.uploadImage = event.target.files[0];\n    }\n  }\n  submitImage() {\n    this.tournamentService.setTournamentImage(this.uploadImage, this.tournamentId).subscribe();\n    location.reload();\n  }\n  goToPage(pageName) {\n    this.router.navigate([`${pageName}`]);\n  }\n  getTimeToStartTournament(data) {\n    if (data && data.startDate) {\n      this.tournamentStart = new Date(data.startDate);\n      this.subscription = interval(1000).subscribe(x => {\n        const currentTime = new Date().getTime();\n        if (this.tournamentStart) {\n          this.timeUntilStart = this.tournamentStart.getTime() - currentTime;\n          if (this.timeUntilStart <= 0 && !this.isStarted) {\n            location.reload();\n          }\n        }\n      });\n    }\n  }\n  ngOnDestroy() {\n    if (this.subscription) this.subscription.unsubscribe();\n  }\n};\nTournamentComponent = __decorate([Component({\n  selector: 'app-tournament',\n  standalone: true,\n  templateUrl: './tournament.component.html',\n  imports: [NgIf, NgClass, FormsModule, NgStyle, DatePipe, LowerCasePipe],\n  styleUrls: ['./tournament.component.css']\n})], TournamentComponent);","map":{"version":3,"names":["Component","DatePipe","LowerCasePipe","NgClass","NgIf","NgStyle","FormsModule","interval","Subscription","TournamentComponent","constructor","tournamentService","route","router","jwtUtil","infoLoaded","imageWindowOpen","isHasImage","subscription","isStarted","startDateString","deleteWindowOpen","params","subscribe","value","tournamentId","role","getRole","ngOnInit","getTournament","data","tournamentRequestData","Date","startDate","toLocaleString","console","log","getTimeToStartTournament","error","errorMessage","navigateByUrl","getTournamentLogo","res","dbImage","onImageUpload","event","target","uploadImage","files","submitImage","setTournamentImage","location","reload","goToPage","pageName","navigate","tournamentStart","x","currentTime","getTime","timeUntilStart","ngOnDestroy","unsubscribe","__decorate","selector","standalone","templateUrl","imports","styleUrls"],"sources":["C:\\Users\\Ivan\\java\\final_project\\client\\src\\app\\pages\\open\\tournament\\tournament_page\\tournament.component.ts"],"sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {TournamentService} from \"../../../../services/TournamentService\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {TournamentRequestData} from \"../../../../models/request/TournamentRequestData\";\r\nimport {DatePipe, LowerCasePipe, NgClass, NgIf, NgStyle} from \"@angular/common\";\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {JwtUtil} from \"../../../../util/JwtUtil\";\r\nimport {interval, Subscription} from \"rxjs\";\r\n\r\n@Component({\r\n  selector: 'app-tournament',\r\n  standalone: true,\r\n  templateUrl: './tournament.component.html',\r\n  imports: [\r\n    NgIf,\r\n    NgClass,\r\n    FormsModule,\r\n    NgStyle,\r\n    DatePipe,\r\n    LowerCasePipe\r\n  ],\r\n  styleUrls: ['./tournament.component.css']\r\n})\r\nexport class TournamentComponent implements OnInit,OnDestroy{\r\n\r\n  public infoLoaded: boolean = false;\r\n  public tournamentId : number | undefined ;\r\n  public tournamentRequestData: TournamentRequestData | undefined;\r\n  public imageWindowOpen: boolean = false;\r\n  // @ts-ignore\r\n  public uploadImage :File | undefined;\r\n  public isHasImage: boolean = false;\r\n  public dbImage: string | undefined;\r\n  public role: string | null;\r\n  public tournamentStart: Date | undefined;\r\n  public timeUntilStart: number | undefined;\r\n  private subscription: Subscription = new Subscription();\r\n  public isStarted: boolean = false;\r\n  public startDateString : string = '';\r\n  public deleteWindowOpen: boolean = true;\r\n\r\n  constructor(private tournamentService:TournamentService,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private jwtUtil: JwtUtil\r\n              ) {\r\n    this.route.params.subscribe(value => {\r\n      this.tournamentId = value['id']\r\n    })\r\n    this.role = this.jwtUtil.getRole();\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.tournamentService.getTournament(this.tournamentId).subscribe(data => {\r\n      this.tournamentRequestData = data;\r\n      this.infoLoaded = true;\r\n      this.isStarted = data.isStarted;\r\n      this.startDateString = new Date(data.startDate).toLocaleString()\r\n      console.log(this.startDateString)\r\n      console.log(this.tournamentRequestData)\r\n      this.getTimeToStartTournament(data);\r\n    },\r\n    error => {\r\n      if (error.errorMessage == \"Tournament not found\") {\r\n        this.router.navigateByUrl('error/404')\r\n      }\r\n    });\r\n    this.tournamentService.getTournamentLogo(this.tournamentId).subscribe( res =>{\r\n      this.dbImage = 'data:image/jpeg;base64,' + res.data;\r\n      this.isHasImage = true;\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  public onImageUpload(event:Event) {\r\n    if (event && event.target){\r\n        // @ts-ignore\r\n        this.uploadImage = event.target.files[0];\r\n      }\r\n  }\r\n  public submitImage() {\r\n    this.tournamentService.setTournamentImage(this.uploadImage, this.tournamentId).subscribe()\r\n    location.reload();\r\n  }\r\n\r\n  public goToPage(pageName: string) {\r\n    this.router.navigate([`${pageName}`])\r\n  }\r\n\r\n  private getTimeToStartTournament(data: TournamentRequestData) {\r\n    if (data && data.startDate) {\r\n      this.tournamentStart = new Date(data.startDate);\r\n      this.subscription = interval(1000).subscribe(x => {\r\n        const currentTime = new Date().getTime();\r\n        if (this.tournamentStart) {\r\n          this.timeUntilStart = this.tournamentStart.getTime() - currentTime;\r\n          if (this.timeUntilStart <= 0 && !this.isStarted) {\r\n            location.reload();\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription)\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}