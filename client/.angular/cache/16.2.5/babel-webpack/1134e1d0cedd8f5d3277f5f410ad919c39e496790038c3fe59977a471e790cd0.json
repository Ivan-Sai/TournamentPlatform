{"ast":null,"code":"import { NgIf } from \"@angular/common\";\nimport { FormControl, ReactiveFormsModule, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/TournamentService\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../../util/JwtUtil\";\nfunction TournamentCreationComponent_p_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 20);\n    i0.ɵɵtext(1, \"*Min teams must be between 2 and 128\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TournamentCreationComponent_p_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 20);\n    i0.ɵɵtext(1, \"*Maximum teams must be equal or bigger then minimum\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TournamentCreationComponent_p_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 20);\n    i0.ɵɵtext(1, \"*Max teams must be between 2 and 128\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TournamentCreationComponent_p_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"*Min start date \", ctx_r3.minDate, \"\");\n  }\n}\nfunction TournamentCreationComponent_p_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"*Max start date \", ctx_r4.maxDate, \"\");\n  }\n}\nexport class TournamentCreationComponent {\n  constructor(fb, tournamentService, router, jwtUtil) {\n    this.fb = fb;\n    this.tournamentService = tournamentService;\n    this.router = router;\n    this.jwtUtil = jwtUtil;\n    this.maxMin = true;\n    this.minCorrect = true;\n    this.maxCorrect = true;\n    this.dateBefore = true;\n    this.dateAfter = true;\n    this.form = this.fb.group({\n      name: new FormControl(null, [Validators.required]),\n      discipline: new FormControl('Dota 2', Validators.required),\n      maxTeams: new FormControl(null, [Validators.required, Validators.min(2), Validators.max(128)]),\n      minTeams: new FormControl(null, [Validators.required, Validators.min(2), Validators.max(128)]),\n      startDate: new FormControl(null, [Validators.required]),\n      tournamentType: new FormControl('SINGLE_ELIMINATION', Validators.required)\n    });\n  }\n  ngOnInit() {\n    this.form.valueChanges.subscribe(value => {\n      this.minDate = new Date(new Date().getTime() + 16 * 60000).toLocaleString().slice(0, -3);\n      this.maxDate = new Date(new Date().getFullYear(), new Date().getMonth() + 2, new Date().getDate()).toLocaleDateString();\n      this.maxMin = this.maxMinCheck(value['maxTeams'], value['minTeams']);\n      this.minCorrect = this.checkMinFormat(value['minTeams']);\n      this.maxCorrect = this.checkMaxFormat(value['maxTeams']);\n      this.dateCheck(value['startDate']);\n    });\n  }\n  onImageUpload(event) {\n    // @ts-ignore\n    this.uploadImage = event.target.files[0];\n  }\n  onSubmit() {\n    console.log('Тип переменной image:', typeof this.uploadImage);\n    console.log(this.uploadImage);\n    const formData = new FormData();\n    const adminId = this.jwtUtil.getId();\n    formData.append('name', this.form.get('name')?.value);\n    formData.append('discipline', this.form.get('discipline')?.value);\n    formData.append('maxTeams', this.form.get('maxTeams')?.value);\n    formData.append('minTeams', this.form.get('minTeams')?.value);\n    formData.append('startDate', this.form.get('startDate')?.value);\n    formData.append('tournamentType', this.form.get('tournamentType')?.value);\n    // @ts-ignore\n    formData.append('adminId', adminId.toString());\n    this.tournamentService.create(formData, this.uploadImage).subscribe(value => {\n      // @ts-ignore\n      this.router.navigateByUrl('tournament/' + value['tournamentId']);\n    });\n  }\n  checkMinFormat(min) {\n    if (min !== null) {\n      return !(min < 2 || min > 128);\n    }\n    return true;\n  }\n  checkMaxFormat(max) {\n    if (max !== null) {\n      return !(max < 2 || max > 128);\n    }\n    return true;\n  }\n  maxMinCheck(max, min) {\n    if (max != null && min != null) return max >= min;\n    return true;\n  }\n  dateCheck(dateStr) {\n    if (dateStr !== null) {\n      const date = new Date(dateStr);\n      const currentDate = new Date();\n      const minDate = new Date(currentDate.getTime() + 15 * 60000); // текущая дата + 15 минут\n      const maxDate = new Date(currentDate.getFullYear(), currentDate.getMonth() + 2, currentDate.getDate()); // текущая дата + 2 месяца\n      this.dateBefore = date >= minDate;\n      this.dateAfter = date <= maxDate;\n    }\n  }\n  static #_ = this.ɵfac = function TournamentCreationComponent_Factory(t) {\n    return new (t || TournamentCreationComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TournamentService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.JwtUtil));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TournamentCreationComponent,\n    selectors: [[\"app-tournament-creation\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 46,\n    vars: 16,\n    consts: [[1, \"flex\", \"flex-col\", \"items-center\", \"w-full\", \"bg-sky-950\", \"justify-center\", 2, \"min-height\", \"calc(100vh - 5rem)\"], [1, \"my-4\", \"flex\", \"flex-col\", \"bg-white\", \"rounded\", \"w-4/12\", \"p-4\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"formControlName\", \"name\", \"max\", \"50\", \"type\", \"text\", \"id\", \"name\", \"aria-describedby\", \"name\", 1, \"border-blue-300\", \"form-control\"], [\"type\", \"file\", 1, \"border-blue-300\", \"form-control\", 3, \"change\"], [\"for\", \"discipline\", 1, \"form-label\"], [\"id\", \"discipline\", \"formControlName\", \"discipline\", \"aria-label\", \"Discipline\", 1, \"form-select\", \"border-blue-300\"], [3, \"value\", \"selected\"], [\"for\", \"minTeams\", 1, \"form-label\"], [\"formControlName\", \"minTeams\", \"type\", \"number\", \"id\", \"minTeams\", \"aria-describedby\", \"maxTeams\", 1, \"border-blue-300\", \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"maxTeams\", 1, \"form-label\"], [\"formControlName\", \"maxTeams\", \"min\", \"2\", \"type\", \"number\", \"id\", \"maxTeams\", \"aria-describedby\", \"maxTeams\", 1, \"border-blue-300\", \"form-control\"], [\"for\", \"startDate\", 1, \"form-label\"], [\"formControlName\", \"startDate\", \"type\", \"datetime-local\", \"id\", \"startDate\", \"aria-describedby\", \"maxTeams\", 1, \"border-blue-300\", \"form-control\"], [\"for\", \"tournamentType\", 1, \"form-label\"], [\"id\", \"tournamentType\", \"formControlName\", \"tournamentType\", \"aria-label\", \"tournamentType\", 1, \"form-select\", \"border-blue-300\"], [3, \"value\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"bg-sky-700\", 3, \"disabled\"], [1, \"text-danger\"]],\n    template: function TournamentCreationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementContainerStart(0);\n        i0.ɵɵelementStart(1, \"div\", 0)(2, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function TournamentCreationComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"label\", 3);\n        i0.ɵɵtext(5, \"Tournament name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 2)(8, \"input\", 5);\n        i0.ɵɵlistener(\"change\", function TournamentCreationComponent_Template_input_change_8_listener($event) {\n          return ctx.onImageUpload($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\", 6);\n        i0.ɵɵtext(11, \"Tournament discipline\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"select\", 7)(13, \"option\", 8);\n        i0.ɵɵtext(14, \"Dota 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"option\", 8);\n        i0.ɵɵtext(16, \"CS 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"option\", 8);\n        i0.ɵɵtext(18, \"Apex\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(19, \"div\", 2)(20, \"label\", 9);\n        i0.ɵɵtext(21, \"Minimum teams in tournament\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 10);\n        i0.ɵɵtemplate(23, TournamentCreationComponent_p_23_Template, 2, 0, \"p\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 2)(25, \"label\", 12);\n        i0.ɵɵtext(26, \"Maximum teams in tournament\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 13);\n        i0.ɵɵtemplate(28, TournamentCreationComponent_p_28_Template, 2, 0, \"p\", 11);\n        i0.ɵɵtemplate(29, TournamentCreationComponent_p_29_Template, 2, 0, \"p\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\", 2)(31, \"label\", 14);\n        i0.ɵɵtext(32, \"Start date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"input\", 15);\n        i0.ɵɵtemplate(34, TournamentCreationComponent_p_34_Template, 2, 1, \"p\", 11);\n        i0.ɵɵtemplate(35, TournamentCreationComponent_p_35_Template, 2, 1, \"p\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"div\", 2)(37, \"label\", 16);\n        i0.ɵɵtext(38, \"Tournament type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"select\", 17)(40, \"option\", 8);\n        i0.ɵɵtext(41, \"Single Elimination \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"option\", 18);\n        i0.ɵɵtext(43, \"Double Elimination\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(44, \"button\", 19);\n        i0.ɵɵtext(45, \"Submit\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementContainerEnd();\n      }\n      if (rf & 2) {\n        let tmp_13_0;\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"value\", \"Dota 2\")(\"selected\", ctx.form.value[\"discipline\"] === \"Dota 2\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"CS 2\")(\"selected\", ctx.form.value[\"discipline\"] === \"CS 2\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Apex\")(\"selected\", ctx.form.value[\"discipline\"] === \"Apex\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", !ctx.minCorrect);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", !ctx.maxMin);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.maxCorrect);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", !ctx.dateBefore);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.dateAfter);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"value\", \"SINGLE_ELIMINATION\")(\"selected\", ((tmp_13_0 = ctx.form.get(\"tournamentType\")) == null ? null : tmp_13_0.value) === \"SINGLE_ELIMINATION\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"DOUBLE_ELIMINATION\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.form.invalid || !ctx.dateBefore || !ctx.dateAfter || !ctx.minCorrect || !ctx.maxCorrect || !ctx.maxMin);\n      }\n    },\n    dependencies: [NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MinValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["NgIf","FormControl","ReactiveFormsModule","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r3","minDate","ctx_r4","maxDate","TournamentCreationComponent","constructor","fb","tournamentService","router","jwtUtil","maxMin","minCorrect","maxCorrect","dateBefore","dateAfter","form","group","name","required","discipline","maxTeams","min","max","minTeams","startDate","tournamentType","ngOnInit","valueChanges","subscribe","value","Date","getTime","toLocaleString","slice","getFullYear","getMonth","getDate","toLocaleDateString","maxMinCheck","checkMinFormat","checkMaxFormat","dateCheck","onImageUpload","event","uploadImage","target","files","onSubmit","console","log","formData","FormData","adminId","getId","append","get","toString","create","navigateByUrl","dateStr","date","currentDate","_","ɵɵdirectiveInject","i1","FormBuilder","i2","TournamentService","i3","Router","i4","JwtUtil","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","TournamentCreationComponent_Template","rf","ctx","ɵɵelementContainerStart","ɵɵlistener","TournamentCreationComponent_Template_form_ngSubmit_2_listener","ɵɵelement","TournamentCreationComponent_Template_input_change_8_listener","$event","ɵɵtemplate","TournamentCreationComponent_p_23_Template","TournamentCreationComponent_p_28_Template","TournamentCreationComponent_p_29_Template","TournamentCreationComponent_p_34_Template","TournamentCreationComponent_p_35_Template","ɵɵelementContainerEnd","ɵɵproperty","tmp_13_0","invalid","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","NumberValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","MinValidator","FormGroupDirective","FormControlName","styles"],"sources":["C:\\Users\\Ivan\\java\\final_project\\client\\src\\app\\pages\\admin\\tournament-creation\\tournament-creation.component.ts","C:\\Users\\Ivan\\java\\final_project\\client\\src\\app\\pages\\admin\\tournament-creation\\tournament-creation.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport { HttpEventType } from '@angular/common/http';\nimport {NgIf} from \"@angular/common\";\nimport {FormBuilder, FormControl, FormGroup, ReactiveFormsModule, Validators} from \"@angular/forms\";\nimport {TournamentService} from \"../../../services/TournamentService\";\nimport {Router} from \"@angular/router\";\nimport {JwtUtil} from \"../../../util/JwtUtil\";\n\n@Component({\n  selector: 'app-tournament-creation',\n  standalone: true,\n  templateUrl: './tournament-creation.component.html',\n  imports: [\n    NgIf,\n    ReactiveFormsModule\n  ],\n  styleUrls: ['./tournament-creation.component.css']\n})\nexport class TournamentCreationComponent implements OnInit {\n\n  public maxMin: boolean = true;\n  public minCorrect: boolean = true;\n  public maxCorrect: boolean = true;\n  public dateBefore: boolean = true;\n  public dateAfter: boolean = true;\n  public minDate: string | undefined;\n  public maxDate: string | undefined;\n  // @ts-ignore\n    private uploadImage: File;\n\n  constructor(private fb: FormBuilder,\n              private tournamentService: TournamentService,\n              private router: Router,\n              private jwtUtil:JwtUtil,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form.valueChanges.subscribe(value => {\n      this.minDate = new Date(new Date().getTime() + 16 * 60000).toLocaleString().slice(0, -3);\n      this.maxDate = new Date(new Date().getFullYear(), new Date().getMonth() + 2, new Date().getDate()).toLocaleDateString();\n      this.maxMin = this.maxMinCheck(value['maxTeams'], value['minTeams']);\n      this.minCorrect = this.checkMinFormat(value['minTeams']);\n      this.maxCorrect = this.checkMaxFormat(value['maxTeams']);\n      this.dateCheck(value['startDate'])\n    })\n  }\n\n  public onImageUpload(event:Event) {\n      // @ts-ignore\n      this.uploadImage = event.target.files[0];\n  }\n\n  public form: FormGroup = this.fb.group({\n    name: new FormControl(null, [Validators.required]),\n    discipline: new FormControl('Dota 2', Validators.required),\n    maxTeams: new FormControl(null, [Validators.required, Validators.min(2), Validators.max(128)]),\n    minTeams: new FormControl(null, [Validators.required, Validators.min(2), Validators.max(128)]),\n    startDate: new FormControl(null, [Validators.required]),\n    tournamentType: new FormControl('SINGLE_ELIMINATION', Validators.required),\n  });\n\n  public onSubmit() {\n    console.log('Тип переменной image:', typeof this.uploadImage);\n    console.log(this.uploadImage);\n    const formData : FormData = new FormData();\n    const adminId: number | undefined = this.jwtUtil.getId();\n    formData.append('name',this.form.get('name')?.value);\n    formData.append('discipline',this.form.get('discipline')?.value);\n    formData.append('maxTeams',this.form.get('maxTeams')?.value);\n    formData.append('minTeams',this.form.get('minTeams')?.value);\n    formData.append('startDate',this.form.get('startDate')?.value);\n    formData.append('tournamentType', this.form.get('tournamentType')?.value);\n    // @ts-ignore\n    formData.append('adminId', adminId.toString() );\n      this.tournamentService.create(formData,this.uploadImage).subscribe(value => {\n        // @ts-ignore\n        this.router.navigateByUrl('tournament/' + value['tournamentId'])\n\n      })\n  }\n\n  private checkMinFormat(min: number) {\n    if (min !== null) {\n      return !(min < 2 || min > 128)\n    }\n    return true\n  }\n\n  private checkMaxFormat(max: number) {\n    if (max !== null) {\n      return !(max < 2 || max > 128)\n    }\n    return true\n  }\n\n  private maxMinCheck(max: number, min: number): boolean {\n    if (max != null && min != null) return max >= min;\n    return true\n  }\n\n  private dateCheck(dateStr: Date): void {\n    if (dateStr !== null) {\n      const date = new Date(dateStr)\n      const currentDate = new Date();\n      const minDate = new Date(currentDate.getTime() + 15 * 60000); // текущая дата + 15 минут\n      const maxDate = new Date(currentDate.getFullYear(), currentDate.getMonth() + 2, currentDate.getDate()); // текущая дата + 2 месяца\n\n      this.dateBefore = date >= minDate;\n      this.dateAfter = date <= maxDate;\n    }\n  }\n\n}\n","<ng-container>\n  <div class=\"flex flex-col items-center w-full bg-sky-950 justify-center\" style=\"min-height: calc(100vh - 5rem)\">\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"my-4 flex flex-col bg-white rounded w-4/12 p-4\">\n      <div class=\"mb-3\">\n        <label for=\"name\" class=\"form-label\">Tournament name</label>\n        <input formControlName=\"name\" max=\"50\" type=\"text\" class=\"border-blue-300 form-control\" id=\"name\"\n               aria-describedby=\"name\">\n      </div>\n      <div class=\"mb-3\">\n        <input type=\"file\" class=\"border-blue-300 form-control\" (change)=\"onImageUpload($event)\">\n\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"discipline\" class=\"form-label\">Tournament discipline</label>\n        <select id=\"discipline\" formControlName=\"discipline\" class=\"form-select border-blue-300\"\n                aria-label=\"Discipline\">\n          <option [value]=\"'Dota 2'\" [selected]=\"form.value['discipline'] === 'Dota 2'\">Dota 2</option>\n          <option [value]=\"'CS 2'\" [selected]=\"form.value['discipline'] === 'CS 2'\">CS 2</option>\n          <option [value]=\"'Apex'\" [selected]=\"form.value['discipline'] === 'Apex'\">Apex</option>\n        </select>\n      </div>\n\n      <div class=\"mb-3\">\n        <label for=\"minTeams\" class=\"form-label\">Minimum teams in tournament</label>\n        <input formControlName=\"minTeams\" type=\"number\" class=\"border-blue-300 form-control\" id=\"minTeams\"\n               aria-describedby=\"maxTeams\">\n        <p *ngIf=\"!minCorrect\" class=\"text-danger\">*Min teams must be between 2 and 128</p>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"maxTeams\" class=\"form-label\">Maximum teams in tournament</label>\n        <input formControlName=\"maxTeams\" min=\"2\" type=\"number\" class=\"border-blue-300 form-control\" id=\"maxTeams\"\n               aria-describedby=\"maxTeams\">\n        <p class=\"text-danger\" *ngIf=\"!maxMin\">*Maximum teams must be equal or bigger then minimum</p>\n        <p *ngIf=\"!maxCorrect\" class=\"text-danger\">*Max teams must be between 2 and 128</p>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"startDate\" class=\"form-label\">Start date</label>\n        <input formControlName=\"startDate\" type=\"datetime-local\" class=\"border-blue-300 form-control\" id=\"startDate\"\n               aria-describedby=\"maxTeams\">\n        <p *ngIf=\"!dateBefore\" class=\"text-danger\">*Min start date {{minDate}}</p>\n        <p *ngIf=\"!dateAfter\" class=\"text-danger\">*Max start date {{maxDate}}</p>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"tournamentType\" class=\"form-label\">Tournament type</label>\n        <select id=\"tournamentType\" formControlName=\"tournamentType\" class=\"form-select border-blue-300\"\n                aria-label=\"tournamentType\">\n          <option [value]=\"'SINGLE_ELIMINATION'\"\n                  [selected]=\"form.get('tournamentType')?.value === 'SINGLE_ELIMINATION'\">Single Elimination\n          </option>\n          <option [value]=\"'DOUBLE_ELIMINATION'\">Double Elimination</option>\n        </select>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary bg-sky-700\" [disabled]=\"form.invalid || !dateBefore || !dateAfter || !minCorrect || !maxCorrect || !maxMin \">Submit</button>\n    </form>\n  </div>\n</ng-container>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}