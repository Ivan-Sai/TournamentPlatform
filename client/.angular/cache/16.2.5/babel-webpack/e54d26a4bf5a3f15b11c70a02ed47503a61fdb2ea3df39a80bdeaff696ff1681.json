{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { NgIf } from \"@angular/common\";\nimport { FormControl, ReactiveFormsModule, Validators } from \"@angular/forms\";\nexport let TournamentCreationComponent = class TournamentCreationComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.maxMin = true;\n    this.minCorrect = true;\n    this.maxCorrect = true;\n    this.dateBefore = true;\n    this.dateAfter = true;\n    this.form = this.fb.group({\n      name: new FormControl(null, [Validators.required]),\n      discipline: new FormControl('Dota 2', Validators.required),\n      maxTeams: new FormControl(null, [Validators.required, Validators.min(2), Validators.max(128)]),\n      minTeams: new FormControl(null, [Validators.required, Validators.min(2), Validators.max(128)]),\n      startDate: new FormControl(new Date(), [Validators.required]),\n      tournamentType: new FormControl('SINGLE_ELIMINATION', Validators.required)\n    });\n  }\n  ngOnInit() {\n    this.currDate = new Date().toDateString();\n    this.form.valueChanges.subscribe(value => {\n      this.currDate = new Date().toDateString();\n      this.maxMin = this.maxMinCheck(value['maxTeams'], value['minTeams']);\n      this.minCorrect = this.checkMinFormat(value['minTeams']);\n      this.maxCorrect = this.checkMaxFormat(value['maxTeams']);\n      this.dateCheck(value['startDate']);\n    });\n  }\n  checkMinFormat(min) {\n    if (min !== null) {\n      return !(min < 2 || min > 128);\n    }\n    return true;\n  }\n  checkMaxFormat(max) {\n    if (max !== null) {\n      return !(max < 2 || max > 128);\n    }\n    return true;\n  }\n  maxMinCheck(max, min) {\n    if (max != null && min != null) return max >= min;\n    return true;\n  }\n  dateCheck(dateStr) {\n    const date = new Date(dateStr);\n    if (date !== null) {\n      const currentDate = new Date();\n      const minDate = new Date(currentDate.getTime() + 15 * 60000); // текущая дата + 15 минут\n      const maxDate = new Date(currentDate.getFullYear(), currentDate.getMonth() + 2, currentDate.getDate()); // текущая дата + 2 месяца\n      if (date < minDate) this.dateBefore = false;\n      if (date > maxDate) this.dateAfter = false;\n    }\n    true;\n  }\n};\nTournamentCreationComponent = __decorate([Component({\n  selector: 'app-tournament-creation',\n  standalone: true,\n  templateUrl: './tournament-creation.component.html',\n  imports: [NgIf, ReactiveFormsModule],\n  styleUrls: ['./tournament-creation.component.css']\n})], TournamentCreationComponent);","map":{"version":3,"names":["Component","NgIf","FormControl","ReactiveFormsModule","Validators","TournamentCreationComponent","constructor","fb","maxMin","minCorrect","maxCorrect","dateBefore","dateAfter","form","group","name","required","discipline","maxTeams","min","max","minTeams","startDate","Date","tournamentType","ngOnInit","currDate","toDateString","valueChanges","subscribe","value","maxMinCheck","checkMinFormat","checkMaxFormat","dateCheck","dateStr","date","currentDate","minDate","getTime","maxDate","getFullYear","getMonth","getDate","__decorate","selector","standalone","templateUrl","imports","styleUrls"],"sources":["C:\\Users\\Ivan\\java\\final_project\\client\\src\\app\\pages\\admin\\tournament-creation\\tournament-creation.component.ts"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {NgIf} from \"@angular/common\";\nimport {FormBuilder, FormControl, FormGroup, ReactiveFormsModule, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-tournament-creation',\n  standalone: true,\n  templateUrl: './tournament-creation.component.html',\n  imports: [\n    NgIf,\n    ReactiveFormsModule\n  ],\n  styleUrls: ['./tournament-creation.component.css']\n})\nexport class TournamentCreationComponent implements OnInit{\n\n  public maxMin : boolean = true;\n  public minCorrect: boolean = true;\n  public maxCorrect: boolean = true;\n  public dateBefore: boolean = true;\n  public dateAfter: boolean = true;\n  public currDate: string | undefined;\n\n  constructor(private fb: FormBuilder,\n              ) {\n  }\n\n  ngOnInit(): void {\n    this.currDate = new Date().toDateString();\n    this.form.valueChanges.subscribe(value => {\n      this.currDate = new Date().toDateString();\n      this.maxMin = this.maxMinCheck(value['maxTeams'],value['minTeams']);\n      this.minCorrect = this.checkMinFormat(value['minTeams']);\n      this.maxCorrect = this.checkMaxFormat(value['maxTeams']);\n      this.dateCheck(value['startDate'])\n    })\n    }\n\n  public form: FormGroup = this.fb.group({\n    name: new FormControl(null, [Validators.required]),\n    discipline: new FormControl('Dota 2', Validators.required),\n    maxTeams: new FormControl(null, [Validators.required, Validators.min(2), Validators.max(128)]),\n    minTeams: new FormControl(null, [Validators.required, Validators.min(2), Validators.max(128)]),\n    startDate: new FormControl(new Date(), [Validators.required]),\n    tournamentType: new FormControl('SINGLE_ELIMINATION', Validators.required),\n  });\n\n  private checkMinFormat(min: number) {\n    if (min !== null){\n      return !(min < 2 || min > 128)\n    }\n    return true\n  }\n  private checkMaxFormat(max: number) {\n    if (max !== null){\n      return !(max < 2 || max > 128)\n    }\n    return true\n  }\n  private maxMinCheck(max:number, min: number):boolean {\n    if (max != null && min != null) return max>=min;\n    return true\n  }\n\n  private dateCheck(dateStr: Date ): void {\n    const date = new Date(dateStr)\n    if (date !== null){\n      const currentDate = new Date();\n      const minDate = new Date(currentDate.getTime() + 15 * 60000); // текущая дата + 15 минут\n      const maxDate = new Date(currentDate.getFullYear(), currentDate.getMonth() + 2, currentDate.getDate()); // текущая дата + 2 месяца\n\n      if (date < minDate) this.dateBefore = false;\n      if (date > maxDate) this.dateAfter = false;\n    }\n     true\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}