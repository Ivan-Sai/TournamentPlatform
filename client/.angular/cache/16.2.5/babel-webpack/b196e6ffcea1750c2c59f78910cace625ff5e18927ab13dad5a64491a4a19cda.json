{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { AsyncPipe, NgForOf, NgIf, NgStyle } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nexport let UserProfileComponent = class UserProfileComponent {\n  constructor(route, jwtUtil, personalService, teamService, router) {\n    this.route = route;\n    this.jwtUtil = jwtUtil;\n    this.personalService = personalService;\n    this.teamService = teamService;\n    this.router = router;\n    this.isHasImage = false;\n    this.avatarWindowOpen = false;\n    this.logoDataMap = {};\n    this.isHasLogoMap = {};\n    this.isLoaded = false;\n    this.route.params.subscribe(value => {\n      this.userId = value['id'];\n    });\n  }\n  ngOnInit() {\n    this.isOwner = this.jwtUtil.getId() == this.userId;\n    this.personalService.getUserData(this.userId).subscribe(value => {\n      this.userData = value;\n      console.log(this.userData);\n    });\n    this.teams$ = this.personalService.getTeamsByPersonal(this.userId);\n    this.loadLogos();\n    this.personalService.getAvatar(this.userId).subscribe(res => {\n      this.imageUrl = 'data:image/jpeg;base64,' + res.data;\n      this.isHasImage = true;\n    });\n    this.isLoaded = true;\n  }\n  changeAvatar() {\n    if (this.isOwner) this.avatarWindowOpen = true;\n  }\n  onImageUpload(event) {\n    if (event && event.target) {\n      // @ts-ignore\n      this.uploadImage = event.target.files[0];\n    }\n  }\n  submitImage() {\n    this.avatarWindowOpen = false;\n    this.personalService.setPersonalAvatar(this.uploadImage, this.userId).subscribe(() => {\n      this.personalService.getAvatar(this.userId).subscribe(res => {\n        this.imageUrl = 'data:image/jpeg;base64,' + res.data;\n        this.isHasImage = true;\n      });\n    });\n  }\n  loadLogos() {\n    if (this.teams$) this.teams$.forEach(value => {\n      value.forEach(value1 => {\n        this.teamService.getTeamLogo(value1.id).subscribe(value2 => {\n          this.logoDataMap[value1.id] = 'data:image/jpeg;base64,' + value2.data;\n          this.isHasLogoMap[value1.id] = true;\n        }, error => {\n          this.isHasLogoMap[value1.id] = false;\n        });\n      });\n    });\n  }\n  getLogo(id) {\n    return this.logoDataMap[id];\n  }\n  redirectToPage(url) {\n    this.router.navigateByUrl(url);\n  }\n};\nUserProfileComponent = __decorate([Component({\n  selector: 'app-user-profile',\n  standalone: true,\n  templateUrl: './user-profile.component.html',\n  imports: [NgStyle, NgIf, FormsModule, ReactiveFormsModule, AsyncPipe, NgForOf],\n  styleUrls: ['./user-profile.component.css']\n})], UserProfileComponent);","map":{"version":3,"names":["Component","AsyncPipe","NgForOf","NgIf","NgStyle","FormsModule","ReactiveFormsModule","UserProfileComponent","constructor","route","jwtUtil","personalService","teamService","router","isHasImage","avatarWindowOpen","logoDataMap","isHasLogoMap","isLoaded","params","subscribe","value","userId","ngOnInit","isOwner","getId","getUserData","userData","console","log","teams$","getTeamsByPersonal","loadLogos","getAvatar","res","imageUrl","data","changeAvatar","onImageUpload","event","target","uploadImage","files","submitImage","setPersonalAvatar","forEach","value1","getTeamLogo","id","value2","error","getLogo","redirectToPage","url","navigateByUrl","__decorate","selector","standalone","templateUrl","imports","styleUrls"],"sources":["C:\\Users\\Ivan\\java\\final_project\\client\\src\\app\\pages\\open\\user-profile\\user-profile.component.ts"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {JwtUtil} from \"../../../util/JwtUtil\";\nimport {UserData} from \"../../../models/request/UserData\";\nimport {PersonalService} from \"../../../services/PersonalService\";\nimport {AsyncPipe, NgForOf, NgIf, NgStyle} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {Observable} from \"rxjs\";\nimport {TeamService} from \"../../../services/TeamService\";\nimport { TeamData } from 'src/app/models/request/TeamData';\n\n@Component({\n  selector: 'app-user-profile',\n  standalone: true,\n  templateUrl: './user-profile.component.html',\n  imports: [\n    NgStyle,\n    NgIf,\n    FormsModule,\n    ReactiveFormsModule,\n    AsyncPipe,\n    NgForOf\n  ],\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n\n  public userId: number | undefined;\n  public isOwner: boolean | undefined;\n  public userData: UserData | undefined;\n  public imageUrl: string | undefined;\n  public isHasImage: boolean = false;\n  public uploadImage: File | undefined;\n\n  public avatarWindowOpen: boolean = false;\n  public teams$ : Observable<TeamData[]> | undefined;\n\n  public logoDataMap: { [key: number]: string } = {};\n  public isHasLogoMap: {[key: number] : boolean} = {}\n  public isLoaded = false;\n\n\n  constructor(private route: ActivatedRoute,\n              private jwtUtil: JwtUtil,\n              private personalService:PersonalService,\n              private teamService: TeamService,\n              private router:Router,\n  ) {\n\n\n    this.route.params.subscribe(value => {\n      this.userId = value['id']\n    })\n\n  }\n\n\n  ngOnInit(): void {\n    this.isOwner = this.jwtUtil.getId() == this.userId;\n    this.personalService.getUserData(this.userId).subscribe(value => {\n      this.userData = value;\n      console.log(this.userData)\n    })\n    this.teams$ = this.personalService.getTeamsByPersonal(this.userId);\n    this.loadLogos()\n    this.personalService.getAvatar(this.userId).subscribe( res =>{\n        this.imageUrl = 'data:image/jpeg;base64,' + res.data;\n        this.isHasImage = true;\n      }\n    )\n    this.isLoaded = true;\n  }\n\n  changeAvatar(){\n    if (this.isOwner)\n    this.avatarWindowOpen = true\n  }\n\n  public onImageUpload(event:Event) {\n    if (event && event.target){\n      // @ts-ignore\n      this.uploadImage = event.target.files[0];\n    }\n  }\n  public submitImage() {\n    this.avatarWindowOpen = false;\n    this.personalService.setPersonalAvatar(this.uploadImage, this.userId).subscribe(() =>{\n      this.personalService.getAvatar(this.userId).subscribe( res =>{\n          this.imageUrl = 'data:image/jpeg;base64,' + res.data;\n          this.isHasImage = true;\n        }\n      )\n      }\n\n    )\n  }\n\n  loadLogos(): void {\n    if (this.teams$)\n    this.teams$.forEach(value => {\n      value.forEach(value1 => {\n        this.teamService.getTeamLogo(value1.id).subscribe(\n          value2 => {\n            this.logoDataMap[value1.id] = 'data:image/jpeg;base64,' + value2.data\n            this.isHasLogoMap[value1.id] = true;\n          }\n          ,error => {\n            this.isHasLogoMap[value1.id] = false\n          }\n        )\n      })\n    })\n\n  }\n  getLogo(id: number): string {\n    return this.logoDataMap[id]\n  }\n\n  redirectToPage(url:string){\n    this.router.navigateByUrl(url);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}