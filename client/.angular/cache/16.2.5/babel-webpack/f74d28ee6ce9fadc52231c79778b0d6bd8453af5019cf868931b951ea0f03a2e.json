{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { AsyncPipe, DatePipe, LowerCasePipe, NgClass, NgForOf, NgIf, NgStyle } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { interval, Subscription } from \"rxjs\";\nimport { TournamentSignInComponent } from \"../../../../shared/tournament-sign-in/tournament-sign-in.component\";\nexport let TournamentPageComponent = class TournamentPageComponent {\n  constructor(tournamentService, route, router, jwtUtil, tokenService, personalService, teamService) {\n    this.tournamentService = tournamentService;\n    this.route = route;\n    this.router = router;\n    this.jwtUtil = jwtUtil;\n    this.tokenService = tokenService;\n    this.personalService = personalService;\n    this.teamService = teamService;\n    this.subscription = new Subscription();\n    this.infoLoaded = false;\n    this.teams$ = this.personalService.getTeamsByPersonal(this.jwtUtil.getId());\n    this.userId = this.jwtUtil.getId();\n    this.isHasImage = false;\n    this.isStarted = false;\n    this.startDateString = '';\n    this.imageWindowOpen = false;\n    this.deleteWindowOpen = false;\n    this.cancelWindowOpen = false;\n    this.authWindowOpen = false;\n    this.tournamentSignupWindowOpen = false;\n    this.confirmTeamSignupWindowOpen = false;\n    this.logoDataMap = {};\n    this.isHasLogoMap = {};\n    this.route.params.subscribe(value => {\n      this.tournamentId = value['id'];\n    });\n    this.role = this.jwtUtil.getRole();\n  }\n  ngOnInit() {\n    this.tournamentService.getTournament(this.tournamentId).subscribe(data => {\n      this.tournamentRequestData = data;\n      this.infoLoaded = true;\n      this.isStarted = data.isStarted;\n      this.startDateString = new Date(data.startDate).toLocaleString();\n      console.log(this.startDateString);\n      console.log(this.tournamentRequestData);\n      this.getTimeToStartTournament(data);\n    }, error => {\n      if (error.error == \"Tournament not found\") {\n        this.router.navigateByUrl('error/404');\n      }\n    });\n    this.tournamentService.getTournamentLogo(this.tournamentId).subscribe(res => {\n      this.dbImage = 'data:image/jpeg;base64,' + res.data;\n      this.isHasImage = true;\n    });\n    this.loadLogos();\n  }\n  onImageUpload(event) {\n    if (event && event.target) {\n      // @ts-ignore\n      this.uploadImage = event.target.files[0];\n    }\n  }\n  submitImage() {\n    this.tournamentService.setTournamentImage(this.uploadImage, this.tournamentId).subscribe();\n    location.reload();\n  }\n  goToPage(pageName) {\n    this.router.navigateByUrl(pageName);\n  }\n  getTimeToStartTournament(data) {\n    if (data && data.startDate) {\n      this.tournamentStart = new Date(data.startDate);\n      this.subscription = interval(1000).subscribe(x => {\n        const currentTime = new Date().getTime();\n        if (this.tournamentStart) {\n          this.timeUntilStart = this.tournamentStart.getTime() - currentTime;\n          if (this.timeUntilStart <= 0 && !this.isStarted) {\n            location.reload();\n          }\n        }\n      });\n    }\n  }\n  formatDate(timeUntilStart) {\n    if (timeUntilStart) {\n      const days = Math.floor(timeUntilStart / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(timeUntilStart % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      const minutes = Math.floor(timeUntilStart % (1000 * 60 * 60) / (1000 * 60));\n      const seconds = Math.floor(timeUntilStart % (1000 * 60) / 1000);\n      let result = '';\n      if (days > 0) {\n        result += days + 'd ';\n      }\n      if (hours > 0) {\n        result += hours + 'h ';\n      }\n      if (minutes > 0) {\n        result += minutes + 'm ';\n      }\n      result += seconds + 's';\n      return result.trim();\n    }\n    return undefined;\n  }\n  deleteTournament() {\n    this.tournamentService.deleteTournament(this.tournamentId).subscribe(() => this.router.navigateByUrl('tournaments'));\n  }\n  cancelTournament() {\n    this.tournamentService.cancelTournament(this.tournamentId).subscribe(() => location.reload(), error => console.log(error.error));\n  }\n  signUpTournament() {\n    if (!localStorage.getItem('accessToken')) {\n      this.authWindowOpen = true;\n    } else {\n      // this.personalService.getTeamsByPersonal().subscribe(value => {\n      //   this.teams = value;\n      //   console.log(this.teams)\n      // })\n      this.tournamentSignupWindowOpen = true;\n    }\n  }\n  loadLogos() {\n    this.teams$.forEach(value => {\n      value.forEach(value1 => {\n        this.teamService.getTeamLogo(value1.id).subscribe(value2 => {\n          this.logoDataMap[value1.id] = 'data:image/jpeg;base64,' + value2.data;\n          this.isHasLogoMap[value1.id] = true;\n        }, error => {\n          this.isHasLogoMap[value1.id] = false;\n        });\n      });\n    });\n  }\n  getLogo(id) {\n    return this.logoDataMap[id];\n  }\n  ngOnDestroy() {\n    if (this.subscription) this.subscription.unsubscribe();\n  }\n  confirmTeamSignup(id, name) {\n    this.tournamentSignupWindowOpen = false;\n    this.confirmTeamSignupWindowOpen = true;\n    this.chosenTeamId = id;\n    this.chosenTeamName = name;\n  }\n  backToSignUpWindow() {\n    this.tournamentSignupWindowOpen = true;\n    this.confirmTeamSignupWindowOpen = false;\n    this.chosenTeamId = undefined;\n    this.chosenTeamName = undefined;\n  }\n};\nTournamentPageComponent = __decorate([Component({\n  selector: 'app-tournament',\n  standalone: true,\n  templateUrl: './tournament-page.component.html',\n  imports: [NgIf, NgClass, FormsModule, NgStyle, DatePipe, LowerCasePipe, AsyncPipe, NgForOf, TournamentSignInComponent],\n  styleUrls: ['./tournament-page.component.css']\n})], TournamentPageComponent);","map":{"version":3,"names":["Component","AsyncPipe","DatePipe","LowerCasePipe","NgClass","NgForOf","NgIf","NgStyle","FormsModule","interval","Subscription","TournamentSignInComponent","TournamentPageComponent","constructor","tournamentService","route","router","jwtUtil","tokenService","personalService","teamService","subscription","infoLoaded","teams$","getTeamsByPersonal","getId","userId","isHasImage","isStarted","startDateString","imageWindowOpen","deleteWindowOpen","cancelWindowOpen","authWindowOpen","tournamentSignupWindowOpen","confirmTeamSignupWindowOpen","logoDataMap","isHasLogoMap","params","subscribe","value","tournamentId","role","getRole","ngOnInit","getTournament","data","tournamentRequestData","Date","startDate","toLocaleString","console","log","getTimeToStartTournament","error","navigateByUrl","getTournamentLogo","res","dbImage","loadLogos","onImageUpload","event","target","uploadImage","files","submitImage","setTournamentImage","location","reload","goToPage","pageName","tournamentStart","x","currentTime","getTime","timeUntilStart","formatDate","days","Math","floor","hours","minutes","seconds","result","trim","undefined","deleteTournament","cancelTournament","signUpTournament","localStorage","getItem","forEach","value1","getTeamLogo","id","value2","getLogo","ngOnDestroy","unsubscribe","confirmTeamSignup","name","chosenTeamId","chosenTeamName","backToSignUpWindow","__decorate","selector","standalone","templateUrl","imports","styleUrls"],"sources":["C:\\Users\\Ivan\\java\\final_project\\client\\src\\app\\pages\\open\\tournament\\tournament_page\\tournament-page.component.ts"],"sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {TournamentService} from \"../../../../services/TournamentService\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {TournamentRequestData} from \"../../../../models/request/TournamentRequestData\";\r\nimport {AsyncPipe, DatePipe, LowerCasePipe, NgClass, NgForOf, NgIf, NgStyle} from \"@angular/common\";\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {JwtUtil} from \"../../../../util/JwtUtil\";\r\nimport {interval, Observable, Subscription} from \"rxjs\";\r\nimport {TokenService} from \"../../../../services/TokenService\";\r\nimport {PersonalService} from \"../../../../services/PersonalService\";\r\nimport {TeamData} from \"../../../../models/request/TeamData\";\r\nimport {TournamentSignInComponent} from \"../../../../shared/tournament-sign-in/tournament-sign-in.component\";\r\nimport {TournamentSignInService} from \"../../../../services/TournamentSigninService\";\r\nimport {TeamService} from \"../../../../services/TeamService\";\r\nimport {UserData} from \"../../../../models/request/UserData\";\r\n\r\n@Component({\r\n  selector: 'app-tournament',\r\n  standalone: true,\r\n  templateUrl: './tournament-page.component.html',\r\n  imports: [\r\n    NgIf,\r\n    NgClass,\r\n    FormsModule,\r\n    NgStyle,\r\n    DatePipe,\r\n    LowerCasePipe,\r\n    AsyncPipe,\r\n    NgForOf,\r\n    TournamentSignInComponent\r\n  ],\r\n  styleUrls: ['./tournament-page.component.css']\r\n})\r\nexport class TournamentPageComponent implements OnInit,OnDestroy{\r\n\r\n  private subscription: Subscription = new Subscription();\r\n\r\n  public infoLoaded: boolean = false;\r\n  public tournamentId : number | undefined ;\r\n  public tournamentRequestData: TournamentRequestData | undefined;\r\n  public teams$: Observable<TeamData[]> = this.personalService.getTeamsByPersonal(this.jwtUtil.getId());\r\n  public userId = this.jwtUtil.getId();\r\n\r\n\r\n\r\n  // @ts-ignore\r\n  public uploadImage :File | undefined;\r\n  public isHasImage: boolean = false;\r\n  public dbImage: string | undefined;\r\n  public role: string | null;\r\n  public tournamentStart: Date | undefined;\r\n  public timeUntilStart: number | undefined;\r\n  public isStarted: boolean = false;\r\n  public startDateString : string = '';\r\n\r\n  public imageWindowOpen: boolean = false;\r\n  public deleteWindowOpen: boolean = false;\r\n  public cancelWindowOpen: boolean = false;\r\n  public authWindowOpen: boolean = false;\r\n  public tournamentSignupWindowOpen: boolean = false;\r\n  public confirmTeamSignupWindowOpen: boolean = false;\r\n\r\n  public logoDataMap: { [key: number]: string } = {};\r\n  public isHasLogoMap: {[key: number] : boolean} = {}\r\n  private chosenTeamId: number | undefined;\r\n  private chosenTeamName: String | undefined;\r\n\r\n\r\n  constructor(private tournamentService:TournamentService,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private jwtUtil: JwtUtil,\r\n              private tokenService: TokenService,\r\n              private personalService: PersonalService,\r\n              private teamService:TeamService,\r\n              ) {\r\n    this.route.params.subscribe(value => {\r\n      this.tournamentId = value['id']\r\n    })\r\n    this.role = this.jwtUtil.getRole();\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.tournamentService.getTournament(this.tournamentId).subscribe(data => {\r\n      this.tournamentRequestData = data;\r\n      this.infoLoaded = true;\r\n      this.isStarted = data.isStarted;\r\n      this.startDateString = new Date(data.startDate).toLocaleString()\r\n      console.log(this.startDateString)\r\n      console.log(this.tournamentRequestData)\r\n      this.getTimeToStartTournament(data);\r\n    },\r\n    error => {\r\n      if (error.error == \"Tournament not found\") {\r\n        this.router.navigateByUrl('error/404')\r\n      }\r\n    });\r\n    this.tournamentService.getTournamentLogo(this.tournamentId).subscribe( res =>{\r\n      this.dbImage = 'data:image/jpeg;base64,' + res.data;\r\n      this.isHasImage = true;\r\n      }\r\n    )\r\n    this.loadLogos();\r\n  }\r\n\r\n  public onImageUpload(event:Event) {\r\n    if (event && event.target){\r\n        // @ts-ignore\r\n        this.uploadImage = event.target.files[0];\r\n      }\r\n  }\r\n  public submitImage() {\r\n    this.tournamentService.setTournamentImage(this.uploadImage, this.tournamentId).subscribe()\r\n    location.reload();\r\n  }\r\n\r\n  public goToPage(pageName: string) {\r\n    this.router.navigateByUrl(pageName)\r\n  }\r\n\r\n  private getTimeToStartTournament(data: TournamentRequestData) {\r\n    if (data && data.startDate) {\r\n      this.tournamentStart = new Date(data.startDate);\r\n      this.subscription = interval(1000).subscribe(x => {\r\n        const currentTime = new Date().getTime();\r\n        if (this.tournamentStart) {\r\n          this.timeUntilStart = this.tournamentStart.getTime() - currentTime;\r\n          if (this.timeUntilStart <= 0 && !this.isStarted) {\r\n            location.reload();\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  formatDate(timeUntilStart: number | undefined) {\r\n    if (timeUntilStart) {\r\n      const days = Math.floor(timeUntilStart / (1000 * 60 * 60 * 24));\r\n      const hours = Math.floor((timeUntilStart % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n      const minutes = Math.floor((timeUntilStart % (1000 * 60 * 60)) / (1000 * 60));\r\n      const seconds = Math.floor((timeUntilStart % (1000 * 60)) / 1000);\r\n\r\n      let result = '';\r\n\r\n      if (days > 0) {\r\n        result += days + 'd ';\r\n      }\r\n      if (hours > 0) {\r\n        result += hours + 'h ';\r\n      }\r\n      if (minutes > 0) {\r\n        result += minutes + 'm ';\r\n      }\r\n      result += seconds + 's';\r\n\r\n      return result.trim();\r\n    }\r\n    return undefined\r\n  }\r\n\r\n\r\n  public deleteTournament() {\r\n    this.tournamentService.deleteTournament(this.tournamentId).subscribe(() =>\r\n      this.router.navigateByUrl('tournaments')\r\n    )\r\n  }\r\n\r\n  public cancelTournament() {\r\n    this.tournamentService.cancelTournament(this.tournamentId).subscribe(() =>\r\n    location.reload()\r\n    ,error => console.log(error.error))\r\n  }\r\n\r\n  public signUpTournament() {\r\n    if (!localStorage.getItem('accessToken')) {\r\n      this.authWindowOpen = true\r\n    }\r\n    else {\r\n      // this.personalService.getTeamsByPersonal().subscribe(value => {\r\n      //   this.teams = value;\r\n      //   console.log(this.teams)\r\n      // })\r\n      this.tournamentSignupWindowOpen = true;\r\n\r\n    }\r\n  }\r\n\r\n  loadLogos(): void {\r\n    this.teams$.forEach(value => {\r\n      value.forEach(value1 => {\r\n        this.teamService.getTeamLogo(value1.id).subscribe(\r\n          value2 => {\r\n            this.logoDataMap[value1.id] = 'data:image/jpeg;base64,' + value2.data\r\n            this.isHasLogoMap[value1.id] = true;\r\n          }\r\n          ,error => {\r\n            this.isHasLogoMap[value1.id] = false\r\n          }\r\n        )\r\n      })\r\n    })\r\n\r\n  }\r\n  getLogo(id: number): string {\r\n    return this.logoDataMap[id]\r\n  }\r\n  ngOnDestroy(): void {\r\n    if (this.subscription)\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n\r\n  confirmTeamSignup(id: number, name: String) {\r\n    this.tournamentSignupWindowOpen = false;\r\n    this.confirmTeamSignupWindowOpen = true;\r\n    this.chosenTeamId = id;\r\n    this.chosenTeamName = name;\r\n  }\r\n\r\n  backToSignUpWindow() {\r\n    this.tournamentSignupWindowOpen = true;\r\n    this.confirmTeamSignupWindowOpen = false;\r\n    this.chosenTeamId = undefined;\r\n    this.chosenTeamName = undefined;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}