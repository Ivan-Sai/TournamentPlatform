{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.tokenSubject = new BehaviorSubject('');\n  }\n  setToken(token) {\n    this.tokenSubject.next(token);\n  }\n  getToken() {\n    return this.tokenSubject.asObservable();\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","AuthService","constructor","tokenSubject","setToken","token","next","getToken","asObservable","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Ivan\\java\\final_project\\client\\src\\app\\services\\AuthService.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private tokenSubject: BehaviorSubject<string> = new BehaviorSubject<string>('');\r\n\r\n  constructor() { }\r\n\r\n  setToken(token: string): void {\r\n    this.tokenSubject.next(token);\r\n  }\r\n\r\n  getToken(): Observable<string> {\r\n    return this.tokenSubject.asObservable();\r\n  }\r\n}\r\n"],"mappings":"AACA,SAASA,eAAe,QAAoB,MAAM;;AAKlD,OAAM,MAAOC,WAAW;EAGtBC,YAAA;IAFQ,KAAAC,YAAY,GAA4B,IAAIH,eAAe,CAAS,EAAE,CAAC;EAE/D;EAEhBI,QAAQA,CAACC,KAAa;IACpB,IAAI,CAACF,YAAY,CAACG,IAAI,CAACD,KAAK,CAAC;EAC/B;EAEAE,QAAQA,CAAA;IACN,OAAO,IAAI,CAACJ,YAAY,CAACK,YAAY,EAAE;EACzC;EAAC,QAAAC,CAAA,G;qBAXUR,WAAW;EAAA;EAAA,QAAAS,EAAA,G;WAAXT,WAAW;IAAAU,OAAA,EAAXV,WAAW,CAAAW,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}