{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { map } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../util/JwtUtil\";\nexport class TournamentService {\n  constructor(http, jwtUtil) {\n    this.http = http;\n    this.jwtUtil = jwtUtil;\n  }\n  create(formValues) {\n    const headers = new HttpHeaders().set(\"Authorization\", \"Bearer \" + localStorage.getItem(\"accessToken\"));\n    const name = formValues['name'];\n    const discipline = formValues['discipline'];\n    const maxTeams = formValues['maxTeams'];\n    const minTeams = formValues['minTeams'];\n    const startDate = formValues['startDate'];\n    const tournamentType = formValues['tournamentType'];\n    const adminId = this.jwtUtil.getId();\n    const image = formValues['image'];\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('discipline', discipline);\n    formData.append('maxTeams', maxTeams.toString());\n    formData.append('minTeams', minTeams.toString());\n    formData.append('startDate', startDate.toString());\n    formData.append('tournamentType', tournamentType);\n    // @ts-ignore\n    formData.append('adminId', adminId.toString());\n    formData.append('image', image);\n    return this.http.post('http://localhost:8080/api/private/admin/tournament', formData, {\n      headers: headers.set('Content-Type', 'multipart/form-data')\n    }).pipe(map(res => res.data));\n  }\n  getTournament(id) {\n    return this.http.get('http://localhost:8080/api/open/tournament/' + id).pipe(map(res => res.data));\n  }\n  static #_ = this.ɵfac = function TournamentService_Factory(t) {\n    return new (t || TournamentService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.JwtUtil));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TournamentService,\n    factory: TournamentService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","map","TournamentService","constructor","http","jwtUtil","create","formValues","headers","set","localStorage","getItem","name","discipline","maxTeams","minTeams","startDate","tournamentType","adminId","getId","image","formData","FormData","append","toString","post","pipe","res","data","getTournament","id","get","_","i0","ɵɵinject","i1","HttpClient","i2","JwtUtil","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Ivan\\java\\final_project\\client\\src\\app\\services\\TournamentService.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {map, Observable} from \"rxjs\";\nimport {ResponseData} from \"../models/ResponseData\";\nimport {JwtUtil} from \"../util/JwtUtil\";\nimport {TournamentRequestData} from \"../models/request/TournamentRequestData\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TournamentService {\n\n  constructor(private http:HttpClient,\n              private jwtUtil: JwtUtil,\n  ) { }\n\n\n  public create(formValues: any): Observable<number> {\n    const headers = new HttpHeaders().set(\"Authorization\", \"Bearer \" + localStorage.getItem(\"accessToken\"))\n\n    const name: string = formValues['name'];\n    const discipline: string = formValues['discipline'];\n    const maxTeams: number = formValues['maxTeams'];\n    const minTeams: number = formValues['minTeams'];\n    const startDate: Date = formValues['startDate'];\n    const tournamentType: string = formValues['tournamentType'];\n    const adminId :number | undefined= this.jwtUtil.getId();\n    const image: File = formValues['image']\n\n    const formData : FormData = new FormData()\n\n    formData.append('name',name);\n    formData.append('discipline',discipline);\n    formData.append('maxTeams',maxTeams.toString());\n    formData.append('minTeams',minTeams.toString());\n    formData.append('startDate',startDate.toString());\n    formData.append('tournamentType', tournamentType);\n    // @ts-ignore\n    formData.append('adminId', adminId.toString());\n    formData.append('image', image);\n\n\n    return this.http.post<ResponseData<number>>('http://localhost:8080/api/private/admin/tournament', formData,{headers: headers.set('Content-Type', 'multipart/form-data')}).pipe(\n      map(res => res.data)\n    )\n  }\n\n  public getTournament(id:number | undefined): Observable<TournamentRequestData> {\n    return this.http.get<ResponseData<TournamentRequestData>>('http://localhost:8080/api/open/tournament/' + id)\n      .pipe(\n        map(res => res.data)\n      )\n  }\n}\n"],"mappings":"AACA,SAAoBA,WAAW,QAAO,sBAAsB;AAC5D,SAAQC,GAAG,QAAmB,MAAM;;;;AAQpC,OAAM,MAAOC,iBAAiB;EAE5BC,YAAoBC,IAAe,EACfC,OAAgB;IADhB,KAAAD,IAAI,GAAJA,IAAI;IACJ,KAAAC,OAAO,GAAPA,OAAO;EACvB;EAGGC,MAAMA,CAACC,UAAe;IAC3B,MAAMC,OAAO,GAAG,IAAIR,WAAW,EAAE,CAACS,GAAG,CAAC,eAAe,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;IAEvG,MAAMC,IAAI,GAAWL,UAAU,CAAC,MAAM,CAAC;IACvC,MAAMM,UAAU,GAAWN,UAAU,CAAC,YAAY,CAAC;IACnD,MAAMO,QAAQ,GAAWP,UAAU,CAAC,UAAU,CAAC;IAC/C,MAAMQ,QAAQ,GAAWR,UAAU,CAAC,UAAU,CAAC;IAC/C,MAAMS,SAAS,GAAST,UAAU,CAAC,WAAW,CAAC;IAC/C,MAAMU,cAAc,GAAWV,UAAU,CAAC,gBAAgB,CAAC;IAC3D,MAAMW,OAAO,GAAsB,IAAI,CAACb,OAAO,CAACc,KAAK,EAAE;IACvD,MAAMC,KAAK,GAASb,UAAU,CAAC,OAAO,CAAC;IAEvC,MAAMc,QAAQ,GAAc,IAAIC,QAAQ,EAAE;IAE1CD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAACX,IAAI,CAAC;IAC5BS,QAAQ,CAACE,MAAM,CAAC,YAAY,EAACV,UAAU,CAAC;IACxCQ,QAAQ,CAACE,MAAM,CAAC,UAAU,EAACT,QAAQ,CAACU,QAAQ,EAAE,CAAC;IAC/CH,QAAQ,CAACE,MAAM,CAAC,UAAU,EAACR,QAAQ,CAACS,QAAQ,EAAE,CAAC;IAC/CH,QAAQ,CAACE,MAAM,CAAC,WAAW,EAACP,SAAS,CAACQ,QAAQ,EAAE,CAAC;IACjDH,QAAQ,CAACE,MAAM,CAAC,gBAAgB,EAAEN,cAAc,CAAC;IACjD;IACAI,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEL,OAAO,CAACM,QAAQ,EAAE,CAAC;IAC9CH,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,KAAK,CAAC;IAG/B,OAAO,IAAI,CAAChB,IAAI,CAACqB,IAAI,CAAuB,oDAAoD,EAAEJ,QAAQ,EAAC;MAACb,OAAO,EAAEA,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE,qBAAqB;IAAC,CAAC,CAAC,CAACiB,IAAI,CAC5KzB,GAAG,CAAC0B,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CACrB;EACH;EAEOC,aAAaA,CAACC,EAAqB;IACxC,OAAO,IAAI,CAAC1B,IAAI,CAAC2B,GAAG,CAAsC,4CAA4C,GAAGD,EAAE,CAAC,CACzGJ,IAAI,CACHzB,GAAG,CAAC0B,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CACrB;EACL;EAAC,QAAAI,CAAA,G;qBA1CU9B,iBAAiB,EAAA+B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,OAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjBrC,iBAAiB;IAAAsC,OAAA,EAAjBtC,iBAAiB,CAAAuC,IAAA;IAAAC,UAAA,EAFhB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}