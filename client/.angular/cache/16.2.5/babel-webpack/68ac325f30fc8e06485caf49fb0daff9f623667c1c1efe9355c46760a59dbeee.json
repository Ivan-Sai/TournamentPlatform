{"ast":null,"code":"import { FormControl, ReactiveFormsModule, Validators } from \"@angular/forms\";\nimport { AsyncPipe, NgIf } from \"@angular/common\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/SignUpService\";\nimport * as i3 from \"@angular/router\";\nfunction SignupComponent_ng_container_0_h1_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const token_r1 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(token_r1);\n  }\n}\nfunction SignupComponent_ng_container_0_p_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.form.getError(\"email\"));\n  }\n}\nfunction SignupComponent_ng_container_0_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1, \" Passwords do not match \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 1)(2, \"form\", 2);\n    i0.ɵɵlistener(\"ngSubmit\", function SignupComponent_ng_container_0_Template_form_ngSubmit_2_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onSubmit());\n    });\n    i0.ɵɵtemplate(3, SignupComponent_ng_container_0_h1_3_Template, 2, 1, \"h1\", 0);\n    i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n    i0.ɵɵtext(6, \"Email address\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 5);\n    i0.ɵɵelementStart(8, \"div\", 6);\n    i0.ɵɵtext(9, \"We'll never share your email with anyone else.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, SignupComponent_ng_container_0_p_10_Template, 2, 1, \"p\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 3)(12, \"label\", 8);\n    i0.ɵɵtext(13, \"Username\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 3)(16, \"label\", 10);\n    i0.ɵɵtext(17, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(18, \"input\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 3)(20, \"label\", 12);\n    i0.ɵɵtext(21, \"Confirm password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(22, \"input\", 13);\n    i0.ɵɵtemplate(23, SignupComponent_ng_container_0_div_23_Template, 2, 0, \"div\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"button\", 14);\n    i0.ɵɵtext(25, \"Submit\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const token_r1 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", token_r1);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.form.hasError);\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.passwordEquals == false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.form.invalid || !ctx_r0.passwordEquals);\n  }\n}\nexport class SignupComponent {\n  constructor(fb, service, router) {\n    this.fb = fb;\n    this.service = service;\n    this.router = router;\n    this.passwordEquals = undefined;\n    this.form = this.fb.group({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      username: new FormControl(null, [Validators.required]),\n      password1: new FormControl(null, [Validators.required]),\n      password2: new FormControl(null, [Validators.required])\n    });\n  }\n  ngOnInit() {\n    this.form.valueChanges.subscribe(value => {\n      this.checkPasswordEquals(value['password1'], value['password2']);\n    });\n  }\n  onSubmit() {\n    if (this.form.valid) {\n      this.token$ = this.service.signup(this.form.value);\n      // this.router.navigate([''],);\n      // localStorage.setItem('token',)\n    }\n  }\n\n  checkPasswordEquals(password1, password2) {\n    if (password1 !== null && password2 !== null) {\n      if (password1 !== password2) {\n        this.passwordEquals = false;\n      } else this.passwordEquals = true;\n    }\n  }\n  static #_ = this.ɵfac = function SignupComponent_Factory(t) {\n    return new (t || SignupComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.SignUpService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SignupComponent,\n    selectors: [[\"app-signup\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 2,\n    vars: 3,\n    consts: [[4, \"ngIf\"], [1, \"flex\", \"flex-col\", \"items-center\", \"w-full\", \"bg-sky-950\", \"justify-center\", 2, \"height\", \"calc(100vh - 5rem)\"], [1, \"flex\", \"flex-col\", \"bg-white\", \"rounded\", \"w-4/12\", \"p-4\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"inputEmail\", 1, \"form-label\"], [\"formControlName\", \"email\", \"type\", \"email\", \"id\", \"inputEmail\", \"aria-describedby\", \"emailHelp\", 1, \"border-blue-300\", \"form-control\"], [\"id\", \"emailHelp\", 1, \"form-text\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"inputUsername\", 1, \"form-label\"], [\"formControlName\", \"username\", \"type\", \"text\", \"id\", \"inputUsername\", \"aria-describedby\", \"emailHelp\", 1, \"border-blue-300\", \"form-control\"], [\"for\", \"inputPassword1\", 1, \"form-label\"], [\"formControlName\", \"password1\", \"type\", \"password\", \"id\", \"inputPassword1\", 1, \"border-blue-300\", \"form-control\"], [\"for\", \"inputPassword2\", 1, \"form-label\"], [\"formControlName\", \"password2\", \"type\", \"password\", \"id\", \"inputPassword2\", 1, \"border-blue-300\", \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"bg-sky-700\", 3, \"disabled\"], [1, \"text-danger\"]],\n    template: function SignupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, SignupComponent_ng_container_0_Template, 26, 5, \"ng-container\", 0);\n        i0.ɵɵpipe(1, \"async\");\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.token$));\n      }\n    },\n    dependencies: [ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, NgIf, AsyncPipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormControl","ReactiveFormsModule","Validators","AsyncPipe","NgIf","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","token_r1","ctx_r3","form","getError","ɵɵelementContainerStart","ɵɵlistener","SignupComponent_ng_container_0_Template_form_ngSubmit_2_listener","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","onSubmit","ɵɵtemplate","SignupComponent_ng_container_0_h1_3_Template","ɵɵelement","SignupComponent_ng_container_0_p_10_Template","SignupComponent_ng_container_0_div_23_Template","ɵɵelementContainerEnd","ɵɵproperty","ctx_r0","hasError","passwordEquals","invalid","SignupComponent","constructor","fb","service","router","undefined","group","email","required","username","password1","password2","ngOnInit","valueChanges","subscribe","value","checkPasswordEquals","valid","token$","signup","_","ɵɵdirectiveInject","i1","FormBuilder","i2","SignUpService","i3","Router","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","SignupComponent_Template","rf","ctx","SignupComponent_ng_container_0_Template","ɵɵpipeBind1","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles"],"sources":["C:\\Users\\Ivan\\java\\final_project\\client\\src\\app\\pages\\signup\\signup.component.ts","C:\\Users\\Ivan\\java\\final_project\\client\\src\\app\\pages\\signup\\signup.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, ReactiveFormsModule, Validators} from \"@angular/forms\";\nimport {AsyncPipe, NgIf} from \"@angular/common\";\nimport {SignUpService} from \"../../services/SignUpService\";\nimport {Router} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\nimport {RegisterData} from \"../../models/request/RegisterData\";\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    NgIf,\n    AsyncPipe\n  ],\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit{\n\n  public passwordEquals: boolean | unknown= undefined ;\n\n  public token$: Observable<RegisterData> | undefined;\n\n  public form: FormGroup = this.fb.group({\n    email: new FormControl(null, [Validators.required,Validators.email]),\n    username: new FormControl(null, [Validators.required]),\n    password1: new FormControl(null, [Validators.required]),\n    password2: new FormControl(null, [Validators.required]),\n  });\n\n  constructor(private fb: FormBuilder,\n              private service: SignUpService,\n              private router: Router) {\n  }\n\n  ngOnInit(): void {\n        this.form.valueChanges.subscribe(value => {\n          this.checkPasswordEquals(value['password1'],value['password2'])\n        })\n    }\n\n  onSubmit() {\n    if (this.form.valid) {\n       this.token$ = this.service.signup(this.form.value);\n\n      // this.router.navigate([''],);\n\n      // localStorage.setItem('token',)\n    }\n  }\n\n  private checkPasswordEquals(password1:string, password2:string) {\n    if (password1 !== null && password2 !== null) {\n      if (password1 !== password2) {\n        this.passwordEquals = false;\n      }\n      else this.passwordEquals = true;\n    }\n  }\n\n}\n","<ng-container *ngIf=\"token$ | async as token\">\n  <div class=\"flex flex-col items-center w-full bg-sky-950 justify-center\" style=\"height: calc(100vh - 5rem)\">\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"flex flex-col bg-white rounded w-4/12 p-4\">\n      <h1 *ngIf=\"token\">{{token}}</h1>\n      <div class=\"mb-3\">\n        <label for=\"inputEmail\" class=\"form-label\">Email address</label>\n        <input formControlName=\"email\" type=\"email\" class=\"border-blue-300 form-control\" id=\"inputEmail\" aria-describedby=\"emailHelp\">\n        <div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div>\n        <p class=\"text-danger\" *ngIf=\"form.hasError\">{{form.getError(\"email\")}}</p>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"inputUsername\" class=\"form-label\">Username</label>\n        <input formControlName=\"username\" type=\"text\" class=\"border-blue-300 form-control\" id=\"inputUsername\" aria-describedby=\"emailHelp\">\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"inputPassword1\" class=\"form-label\">Password</label>\n        <input formControlName=\"password1\" type=\"password\" class=\"border-blue-300  form-control\" id=\"inputPassword1\">\n      </div>\n\n      <div class=\"mb-3\">\n        <label for=\"inputPassword2\" class=\"form-label\">Confirm password</label>\n        <input formControlName=\"password2\" type=\"password\" class=\"border-blue-300  form-control\" id=\"inputPassword2\">\n        <div class=\"text-danger\" *ngIf=\"this.passwordEquals == false\">\n          Passwords do not match\n        </div>\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-primary bg-sky-700\" [disabled]=\"form.invalid  || !this.passwordEquals \">Submit</button>\n    </form>\n  </div>\n</ng-container>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}