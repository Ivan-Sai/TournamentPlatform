{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { NgForOf, NgIf, NgStyle } from \"@angular/common\";\nexport let BracketComponent = class BracketComponent {\n  constructor(bracketService, jwtUtil, teamService) {\n    this.bracketService = bracketService;\n    this.jwtUtil = jwtUtil;\n    this.teamService = teamService;\n    this.role = this.jwtUtil.getRole();\n    this.userId = this.jwtUtil.getId();\n    this.logoDataMap = {};\n    this.isHasLogoMap = {};\n  }\n  ngOnInit() {\n    this.bracketService.findBracket(this.bracketId).subscribe(value => {\n      this.bracket = value;\n      this.teams = [];\n      value.stages.forEach(stage => {\n        stage.matches.forEach(match => {\n          this.teams?.push(match.team1);\n          this.teams?.push(match.team2);\n        });\n      });\n      this.loadLogos();\n    });\n    if (this.winnerId != 0) {\n      this.teamService.findById(this.winnerId).subscribe(value => {\n        this.winner = value;\n      });\n    }\n  }\n  loadLogos() {\n    if (this.teams) this.teams.forEach(value => {\n      this.teamService.getTeamLogo(value.id).subscribe(value2 => {\n        this.logoDataMap[value.id] = 'data:image/jpeg;base64,' + value2.data;\n        this.isHasLogoMap[value.id] = true;\n      }, error => {\n        this.isHasLogoMap[value.id] = false;\n      });\n    });\n  }\n  getLogo(id) {\n    return this.logoDataMap[id];\n  }\n  teamWon(teamId, bracketId, matchId, stageId) {\n    this.bracketService.teamWon(teamId, matchId, bracketId, stageId).subscribe(() => {\n      location.reload();\n    });\n  }\n};\n__decorate([Input()], BracketComponent.prototype, \"bracketId\", void 0);\n__decorate([Input()], BracketComponent.prototype, \"adminId\", void 0);\n__decorate([Input()], BracketComponent.prototype, \"winnerId\", void 0);\nBracketComponent = __decorate([Component({\n  selector: 'app-bracket',\n  standalone: true,\n  templateUrl: './bracket.component.html',\n  imports: [NgIf, NgForOf, NgStyle],\n  styleUrls: ['./bracket.component.css']\n})], BracketComponent);","map":{"version":3,"names":["Component","Input","NgForOf","NgIf","NgStyle","BracketComponent","constructor","bracketService","jwtUtil","teamService","role","getRole","userId","getId","logoDataMap","isHasLogoMap","ngOnInit","findBracket","bracketId","subscribe","value","bracket","teams","stages","forEach","stage","matches","match","push","team1","team2","loadLogos","winnerId","findById","winner","getTeamLogo","id","value2","data","error","getLogo","teamWon","teamId","matchId","stageId","location","reload","__decorate","selector","standalone","templateUrl","imports","styleUrls"],"sources":["C:\\Users\\Ivan\\java\\final_project\\client\\src\\app\\pages\\open\\tournament\\tournament_page\\bracket\\bracket.component.ts"],"sourcesContent":["import {Component, Input, OnInit} from '@angular/core';\nimport {BracketService} from \"../../../../../services/BracketService\";\nimport {BracketData} from \"../../../../../models/request/BracketData\";\nimport {NgForOf, NgIf, NgStyle} from \"@angular/common\";\nimport {StageData} from \"../../../../../models/request/StageData\";\nimport {last} from \"rxjs\";\nimport {JwtUtil} from \"../../../../../util/JwtUtil\";\nimport {TeamService} from \"../../../../../services/TeamService\";\nimport {TeamData} from \"../../../../../models/request/TeamData\";\n\n@Component({\n  selector: 'app-bracket',\n  standalone: true,\n  templateUrl: './bracket.component.html',\n  imports: [\n    NgIf,\n    NgForOf,\n    NgStyle\n  ],\n  styleUrls: ['./bracket.component.css']\n})\nexport class BracketComponent implements OnInit{\n  @Input() bracketId: number | undefined;\n  @Input() adminId: number | undefined;\n  @Input() winnerId: number | undefined;\n\n  public bracket: BracketData | undefined;\n  public role: string | null = this.jwtUtil.getRole();\n  public userId: number | undefined = this.jwtUtil.getId();\n  public winner: TeamData | undefined;\n\n  public logoDataMap: { [key: number]: string } = {};\n  public isHasLogoMap: { [key: number]: boolean } = {}\n  public teams: TeamData[] | undefined;\n  constructor(private bracketService: BracketService,\n              private jwtUtil: JwtUtil,\n              private teamService: TeamService,\n              ) {\n  }\n  ngOnInit(): void {\n    this.bracketService.findBracket(this.bracketId).subscribe(value => {\n      this.bracket = value;\n      this.teams = [];\n\n      value.stages.forEach(stage => {\n        stage.matches.forEach(match => {\n          this.teams?.push(match.team1);\n          this.teams?.push(match.team2);\n        });\n      });\n\n      this.loadLogos();\n    });\n\n    if (this.winnerId != 0) {\n      this.teamService.findById(this.winnerId).subscribe(value => {\n        this.winner = value;\n      });\n    }\n  }\n\n\n\n  loadLogos(): void {\n    if (this.teams)\n    this.teams.forEach(value => {\n        this.teamService.getTeamLogo(value.id).subscribe(\n          value2 => {\n            this.logoDataMap[value.id] = 'data:image/jpeg;base64,' + value2.data\n            this.isHasLogoMap[value.id] = true;\n          }\n          , error => {\n            this.isHasLogoMap[value.id] = false\n          }\n        )\n      })\n  }\n\n  getLogo(id: number): string {\n    return this.logoDataMap[id]\n  }\n\n  teamWon(teamId: number, bracketId: number, matchId: number | undefined, stageId: number) {\n    this.bracketService.teamWon(teamId,matchId,bracketId,stageId).subscribe(\n      () => {\n        location.reload();\n      }\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}