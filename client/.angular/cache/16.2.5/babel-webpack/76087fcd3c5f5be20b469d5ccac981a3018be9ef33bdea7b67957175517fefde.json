{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, ReactiveFormsModule, Validators } from \"@angular/forms\";\nimport { AsyncPipe, NgIf } from \"@angular/common\";\nexport let SignupComponent = class SignupComponent {\n  constructor(fb, service, router, authService) {\n    this.fb = fb;\n    this.service = service;\n    this.router = router;\n    this.authService = authService;\n    this.form = this.fb.group({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      username: new FormControl(null, [Validators.required]),\n      password1: new FormControl(null, [Validators.required]),\n      password2: new FormControl(null, [Validators.required])\n    });\n    this.errorMessage = '';\n  }\n  ngOnInit() {\n    this.form.valueChanges.subscribe(value => {\n      this.checkPasswordEquals(value['password1'], value['password2']);\n    });\n  }\n  onSubmit() {\n    if (this.form.valid) {\n      this.service.signup(this.form.value).subscribe(registerData => {\n        if (registerData && registerData['accessToken']) {\n          this.authService.setToken(registerData['accessToken']);\n          this.router.navigate(['/']).then(() => {\n            location.reload;\n          });\n        }\n      }, error => {\n        if (error.error) {\n          this.errorMessage = error.error;\n        }\n      });\n    }\n  }\n  goToPage(pageName) {\n    this.router.navigate([`${pageName}`]);\n  }\n  checkPasswordEquals(password1, password2) {\n    if (password1 !== null && password2 !== null) {\n      this.passwordEquals = password1 === password2;\n    }\n  }\n};\nSignupComponent = __decorate([Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  standalone: true,\n  imports: [ReactiveFormsModule, NgIf, AsyncPipe],\n  styleUrls: ['./signup.component.css']\n})], SignupComponent);","map":{"version":3,"names":["Component","FormControl","ReactiveFormsModule","Validators","AsyncPipe","NgIf","SignupComponent","constructor","fb","service","router","authService","form","group","email","required","username","password1","password2","errorMessage","ngOnInit","valueChanges","subscribe","value","checkPasswordEquals","onSubmit","valid","signup","registerData","setToken","navigate","then","location","reload","error","goToPage","pageName","passwordEquals","__decorate","selector","templateUrl","standalone","imports","styleUrls"],"sources":["C:\\Users\\Ivan\\java\\final_project\\client\\src\\app\\pages\\open\\auth\\signup\\signup.component.ts"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, ReactiveFormsModule, Validators} from \"@angular/forms\";\nimport {AsyncPipe, NgIf} from \"@angular/common\";\nimport {Router} from \"@angular/router\";\n\nimport {TokenService} from \"../../../../services/TokenService\";\nimport {AuthService} from \"../../../../services/AuthService\";\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    NgIf,\n    AsyncPipe,\n  ],\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  public passwordEquals: boolean | unknown | undefined;\n\n  public token: string | undefined;\n\n  public form: FormGroup = this.fb.group({\n    email: new FormControl(null, [Validators.required, Validators.email]),\n    username: new FormControl(null, [Validators.required]),\n    password1: new FormControl(null, [Validators.required]),\n    password2: new FormControl(null, [Validators.required]),\n  });\n  public errorMessage: string = '';\n\n  constructor(private fb: FormBuilder,\n              private service: AuthService,\n              private router: Router,\n              private authService: TokenService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form.valueChanges.subscribe(value => {\n      this.checkPasswordEquals(value['password1'], value['password2'])\n    })\n  }\n\n  onSubmit() {\n    if (this.form.valid) {\n      this.service.signup(this.form.value).subscribe(registerData => {\n          if (registerData && registerData['accessToken']) {\n            this.authService.setToken(registerData['accessToken']);\n            this.router.navigate(['/']).then(() => {\n              location.reload;\n            });\n          }\n        },\n        error => {\n          if (error.error) {\n            this.errorMessage = error.error;\n          }\n        }\n      );\n    }\n  }\n  public goToPage(pageName: string) {\n    this.router.navigate([`${pageName}`])\n  }\n  private checkPasswordEquals(password1: string, password2: string) {\n    if (password1 !== null && password2 !== null) {\n      this.passwordEquals = password1 === password2;\n    }\n  }\n\n}\n"],"mappings":";AAAA,SAAQA,SAAS,QAAe,eAAe;AAC/C,SAAqBC,WAAW,EAAaC,mBAAmB,EAAEC,UAAU,QAAO,gBAAgB;AACnG,SAAQC,SAAS,EAAEC,IAAI,QAAO,iBAAiB;AAiBxC,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAc1BC,YAAoBC,EAAe,EACfC,OAAoB,EACpBC,MAAc,EACdC,WAAyB;IAHzB,KAAAH,EAAE,GAAFA,EAAE;IACF,KAAAC,OAAO,GAAPA,OAAO;IACP,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,WAAW,GAAXA,WAAW;IAXxB,KAAAC,IAAI,GAAc,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MACrCC,KAAK,EAAE,IAAIb,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACW,KAAK,CAAC,CAAC;MACrEE,QAAQ,EAAE,IAAIf,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACY,QAAQ,CAAC,CAAC;MACtDE,SAAS,EAAE,IAAIhB,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACY,QAAQ,CAAC,CAAC;MACvDG,SAAS,EAAE,IAAIjB,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACY,QAAQ,CAAC;KACvD,CAAC;IACK,KAAAI,YAAY,GAAW,EAAE;EAOhC;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACR,IAAI,CAACS,YAAY,CAACC,SAAS,CAACC,KAAK,IAAG;MACvC,IAAI,CAACC,mBAAmB,CAACD,KAAK,CAAC,WAAW,CAAC,EAAEA,KAAK,CAAC,WAAW,CAAC,CAAC;IAClE,CAAC,CAAC;EACJ;EAEAE,QAAQA,CAAA;IACN,IAAI,IAAI,CAACb,IAAI,CAACc,KAAK,EAAE;MACnB,IAAI,CAACjB,OAAO,CAACkB,MAAM,CAAC,IAAI,CAACf,IAAI,CAACW,KAAK,CAAC,CAACD,SAAS,CAACM,YAAY,IAAG;QAC1D,IAAIA,YAAY,IAAIA,YAAY,CAAC,aAAa,CAAC,EAAE;UAC/C,IAAI,CAACjB,WAAW,CAACkB,QAAQ,CAACD,YAAY,CAAC,aAAa,CAAC,CAAC;UACtD,IAAI,CAAClB,MAAM,CAACoB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACC,IAAI,CAAC,MAAK;YACpCC,QAAQ,CAACC,MAAM;UACjB,CAAC,CAAC;;MAEN,CAAC,EACDC,KAAK,IAAG;QACN,IAAIA,KAAK,CAACA,KAAK,EAAE;UACf,IAAI,CAACf,YAAY,GAAGe,KAAK,CAACA,KAAK;;MAEnC,CAAC,CACF;;EAEL;EACOC,QAAQA,CAACC,QAAgB;IAC9B,IAAI,CAAC1B,MAAM,CAACoB,QAAQ,CAAC,CAAC,GAAGM,QAAQ,EAAE,CAAC,CAAC;EACvC;EACQZ,mBAAmBA,CAACP,SAAiB,EAAEC,SAAiB;IAC9D,IAAID,SAAS,KAAK,IAAI,IAAIC,SAAS,KAAK,IAAI,EAAE;MAC5C,IAAI,CAACmB,cAAc,GAAGpB,SAAS,KAAKC,SAAS;;EAEjD;CAED;AAtDYZ,eAAe,GAAAgC,UAAA,EAX3BtC,SAAS,CAAC;EACTuC,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CACPxC,mBAAmB,EACnBG,IAAI,EACJD,SAAS,CACV;EACDuC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWrC,eAAe,CAsD3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}