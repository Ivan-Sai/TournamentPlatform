{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./util/JwtUtil\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(jwtUtil, router) {\n    this.jwtUtil = jwtUtil;\n    this.router = router;\n  }\n  canActivate(next, state) {\n    const role = this.jwtUtil.getRole();\n    if (role === 'ADMIN') {\n      return true;\n    } else {\n      this.router.navigate(['/']);\n      return false;\n    }\n  }\n  static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.JwtUtil), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthGuard","constructor","jwtUtil","router","canActivate","next","state","role","getRole","navigate","_","i0","ɵɵinject","i1","JwtUtil","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Ivan\\java\\final_project\\client\\src\\app\\AuthGuard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport {JwtUtil} from \"./util/JwtUtil\"; // замените на путь к вашему сервису Jwt\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private jwtUtil: JwtUtil, private router: Router) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n\r\n    const role = this.jwtUtil.getRole(); \r\n\r\n    if (role === 'ADMIN') {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n"],"mappings":";;;AAQA,OAAM,MAAOA,SAAS;EAEpBC,YAAoBC,OAAgB,EAAUC,MAAc;IAAxC,KAAAD,OAAO,GAAPA,OAAO;IAAmB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAE/DC,WAAWA,CACTC,IAA4B,EAC5BC,KAA0B;IAE1B,MAAMC,IAAI,GAAG,IAAI,CAACL,OAAO,CAACM,OAAO,EAAE;IAEnC,IAAID,IAAI,KAAK,OAAO,EAAE;MACpB,OAAO,IAAI;KACZ,MAAM;MACL,IAAI,CAACJ,MAAM,CAACM,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;MAC3B,OAAO,KAAK;;EAEhB;EAAC,QAAAC,CAAA,G;qBAhBUV,SAAS,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,OAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAATjB,SAAS;IAAAkB,OAAA,EAATlB,SAAS,CAAAmB,IAAA;IAAAC,UAAA,EAFR;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}