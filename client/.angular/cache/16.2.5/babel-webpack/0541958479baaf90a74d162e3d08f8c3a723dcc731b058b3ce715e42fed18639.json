{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class SignupComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.registrationForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n      confirmPassword: ['', Validators.required]\n    });\n  }\n  static #_ = this.ɵfac = function SignupComponent_Factory(t) {\n    return new (t || SignupComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SignupComponent,\n    selectors: [[\"app-signup\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 22,\n    vars: 0,\n    consts: [[1, \"flex\", \"flex-col\", \"items-center\", \"w-full\", \"bg-sky-950\", \"justify-center\", 2, \"height\", \"calc(100vh - 5rem)\"], [1, \"flex\", \"flex-col\", \"bg-white\", \"rounded\", \"w-4/12\", \"p-4\"], [1, \"mb-3\"], [\"for\", \"inputEmail\", 1, \"form-label\"], [\"name\", \"email\", \"type\", \"email\", \"id\", \"inputEmail\", \"aria-describedby\", \"emailHelp\", 1, \"border-blue-300\", \"form-control\"], [\"id\", \"emailHelp\", 1, \"form-text\"], [\"for\", \"inputUsername\", 1, \"form-label\"], [\"name\", \"username\", \"type\", \"text\", \"id\", \"inputUsername\", \"aria-describedby\", \"emailHelp\", 1, \"border-blue-300\", \"form-control\"], [\"for\", \"inputPassword1\", 1, \"form-label\"], [\"name\", \"password\", \"type\", \"password\", \"id\", \"inputPassword1\", 1, \"border-blue-300\", \"form-control\"], [\"for\", \"inputPassword2\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"inputPassword2\", 1, \"border-blue-300\", \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"bg-sky-700\"]],\n    template: function SignupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"div\", 2)(3, \"label\", 3);\n        i0.ɵɵtext(4, \"Email address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 4);\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵtext(7, \"We'll never share your email with anyone else.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 6);\n        i0.ɵɵtext(10, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 8);\n        i0.ɵɵtext(14, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 2)(17, \"label\", 10);\n        i0.ɵɵtext(18, \"Confirm password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 12);\n        i0.ɵɵtext(21, \"Submit\");\n        i0.ɵɵelementEnd()()();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","SignupComponent","constructor","formBuilder","registrationForm","group","email","required","username","password","confirmPassword","_","i0","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","SignupComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["C:\\Users\\Ivan\\java\\final_project\\client\\src\\app\\pages\\signup\\signup.component.ts","C:\\Users\\Ivan\\java\\final_project\\client\\src\\app\\pages\\signup\\signup.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  standalone:true,\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent {\n\n  registrationForm : FormGroup;\n  constructor(private formBuilder: FormBuilder) {\n    this.registrationForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n      confirmPassword: ['', Validators.required],\n    });\n  }\n\n  public onSubmite\n}\n","<div class=\"flex flex-col items-center w-full bg-sky-950 justify-center\" style=\"height: calc(100vh - 5rem)\">\n  <form class=\"flex flex-col bg-white rounded w-4/12 p-4\">\n    <div class=\"mb-3\">\n      <label for=\"inputEmail\" class=\"form-label\">Email address</label>\n      <input name=\"email\" type=\"email\" class=\"border-blue-300 form-control\" id=\"inputEmail\" aria-describedby=\"emailHelp\">\n      <div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div>\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"inputUsername\" class=\"form-label\">Username</label>\n      <input name=\"username\" type=\"text\" class=\"border-blue-300 form-control\" id=\"inputUsername\" aria-describedby=\"emailHelp\">\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"inputPassword1\" class=\"form-label\">Password</label>\n      <input name=\"password\" type=\"password\" class=\"border-blue-300  form-control\" id=\"inputPassword1\">\n    </div>\n\n    <div class=\"mb-3\">\n      <label for=\"inputPassword2\" class=\"form-label\">Confirm password</label>\n      <input type=\"password\" class=\"border-blue-300  form-control\" id=\"inputPassword2\">\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-primary bg-sky-700\">Submit</button>\n  </form>\n</div>\n"],"mappings":"AACA,SAAgCA,UAAU,QAAO,gBAAgB;;;AAQjE,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAC7B,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;MAC7CC,KAAK,EAAE,CAAC,EAAE,EAAEN,UAAU,CAACO,QAAQ,CAAC;MAChCC,QAAQ,EAAE,CAAC,EAAE,EAAER,UAAU,CAACO,QAAQ,CAAC;MACnCE,QAAQ,EAAE,CAAC,EAAE,EAAET,UAAU,CAACO,QAAQ,CAAC;MACnCG,eAAe,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACO,QAAQ;KAC1C,CAAC;EACJ;EAAC,QAAAI,CAAA,G;qBAVUV,eAAe,EAAAW,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAff,eAAe;IAAAgB,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAAP,EAAA,CAAAQ,mBAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT5Bd,EAAA,CAAAgB,cAAA,aAA4G;QAG3DhB,EAAA,CAAAiB,MAAA,oBAAa;QAAAjB,EAAA,CAAAkB,YAAA,EAAQ;QAChElB,EAAA,CAAAmB,SAAA,eAAmH;QACnHnB,EAAA,CAAAgB,cAAA,aAAsC;QAAAhB,EAAA,CAAAiB,MAAA,qDAA8C;QAAAjB,EAAA,CAAAkB,YAAA,EAAM;QAE5FlB,EAAA,CAAAgB,cAAA,aAAkB;QAC8BhB,EAAA,CAAAiB,MAAA,gBAAQ;QAAAjB,EAAA,CAAAkB,YAAA,EAAQ;QAC9DlB,EAAA,CAAAmB,SAAA,gBAAwH;QAC1HnB,EAAA,CAAAkB,YAAA,EAAM;QACNlB,EAAA,CAAAgB,cAAA,cAAkB;QAC+BhB,EAAA,CAAAiB,MAAA,gBAAQ;QAAAjB,EAAA,CAAAkB,YAAA,EAAQ;QAC/DlB,EAAA,CAAAmB,SAAA,gBAAiG;QACnGnB,EAAA,CAAAkB,YAAA,EAAM;QAENlB,EAAA,CAAAgB,cAAA,cAAkB;QAC+BhB,EAAA,CAAAiB,MAAA,wBAAgB;QAAAjB,EAAA,CAAAkB,YAAA,EAAQ;QACvElB,EAAA,CAAAmB,SAAA,iBAAiF;QACnFnB,EAAA,CAAAkB,YAAA,EAAM;QAENlB,EAAA,CAAAgB,cAAA,kBAAyD;QAAAhB,EAAA,CAAAiB,MAAA,cAAM;QAAAjB,EAAA,CAAAkB,YAAA,EAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}