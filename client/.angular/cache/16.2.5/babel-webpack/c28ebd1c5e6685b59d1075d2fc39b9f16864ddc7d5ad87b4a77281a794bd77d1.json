{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { AsyncPipe, NgForOf, NgIf } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nexport let TeamPageComponent = class TeamPageComponent {\n  constructor(teamService, route, jwtUtil, router, personalService) {\n    this.teamService = teamService;\n    this.route = route;\n    this.jwtUtil = jwtUtil;\n    this.router = router;\n    this.personalService = personalService;\n    this.isOwner = false;\n    this.avatarWindowOpen = false;\n    this.addPlayerWindowOpen = false;\n    this.isLoaded = false;\n    this.isHasImage = false;\n    this.logoDataMap = {};\n    this.isHasLogoMap = {};\n    this.isCopied = false;\n    this.route.params.subscribe(value => {\n      this.teamId = value['id'];\n    });\n  }\n  ngOnInit() {\n    this.teamService.getTeamLogo(this.teamId).subscribe(res => {\n      this.imageUrl = 'data:image/jpeg;base64,' + res.data;\n      this.isHasImage = true;\n    });\n    this.teamService.findById(this.teamId).subscribe(value => {\n      this.team = value;\n      this.isOwner = value.adminId == this.jwtUtil.getId();\n      this.teamUUID = value.token;\n      this.userInviteLink = `http://localhost:4200/teams/${this.teamId}/${this.teamUUID}/inviteLink`;\n    }, error => {\n      if (error.error == \"Team not found\") {\n        this.router.navigateByUrl('error/404');\n      }\n    });\n    console.log(this.teamId);\n    this.users$ = this.teamService.getUsersByTeam(this.teamId);\n    this.loadLogos();\n    setTimeout(() => {\n      this.isLoaded = true;\n    }, 500);\n    console.log(this.isLoaded);\n    console.log(this.isOwner);\n  }\n  changeAvatar() {\n    if (this.isOwner) this.avatarWindowOpen = true;\n  }\n  onImageUpload(event) {\n    if (event && event.target) {\n      // @ts-ignore\n      this.uploadImage = event.target.files[0];\n    }\n  }\n  submitImage() {\n    this.avatarWindowOpen = false;\n    this.teamService.setTeamLogo(this.uploadImage, this.teamId).subscribe(() => {\n      this.teamService.getTeamLogo(this.teamId).subscribe(res => {\n        this.imageUrl = 'data:image/jpeg;base64,' + res.data;\n        this.isHasImage = true;\n      });\n    });\n  }\n  loadLogos() {\n    if (this.users$) this.users$.forEach(value => {\n      value.forEach(value1 => {\n        this.personalService.getAvatar(value1.id).subscribe(value2 => {\n          this.logoDataMap[value1.id] = 'data:image/jpeg;base64,' + value2.data;\n          this.isHasLogoMap[value1.id] = true;\n        }, error => {\n          this.isHasLogoMap[value1.id] = false;\n        });\n      });\n    });\n  }\n  getLogo(id) {\n    return this.logoDataMap[id];\n  }\n  redirectToPage(url) {\n    this.router.navigateByUrl(url);\n  }\n  addPlayer() {\n    if (this.isOwner) {\n      this.addPlayerWindowOpen = true;\n    }\n  }\n  copyInviteLink() {\n    if (this.userInviteLink) navigator.clipboard.writeText(this.userInviteLink).then(() => {\n      console.log('Link copied to clipboard successfully.');\n    }).catch(error => {\n      console.error('Unable to copy link to clipboard. Error:', error);\n    });\n    this.isCopied = true;\n    setTimeout(() => {\n      this.isCopied = false;\n    }, 500);\n  }\n};\nTeamPageComponent = __decorate([Component({\n  selector: 'app-team-page',\n  standalone: true,\n  templateUrl: './team-page.component.html',\n  imports: [NgIf, FormsModule, ReactiveFormsModule, AsyncPipe, NgForOf],\n  styleUrls: ['./team-page.component.css']\n})], TeamPageComponent);","map":{"version":3,"names":["Component","AsyncPipe","NgForOf","NgIf","FormsModule","ReactiveFormsModule","TeamPageComponent","constructor","teamService","route","jwtUtil","router","personalService","isOwner","avatarWindowOpen","addPlayerWindowOpen","isLoaded","isHasImage","logoDataMap","isHasLogoMap","isCopied","params","subscribe","value","teamId","ngOnInit","getTeamLogo","res","imageUrl","data","findById","team","adminId","getId","teamUUID","token","userInviteLink","error","navigateByUrl","console","log","users$","getUsersByTeam","loadLogos","setTimeout","changeAvatar","onImageUpload","event","target","uploadImage","files","submitImage","setTeamLogo","forEach","value1","getAvatar","id","value2","getLogo","redirectToPage","url","addPlayer","copyInviteLink","navigator","clipboard","writeText","then","catch","__decorate","selector","standalone","templateUrl","imports","styleUrls"],"sources":["C:\\Users\\Ivan\\java\\final_project\\client\\src\\app\\pages\\open\\team\\team-page\\team-page.component.ts"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {TeamService} from \"../../../../services/TeamService\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport { TeamData } from 'src/app/models/request/TeamData';\nimport {AsyncPipe, NgForOf, NgIf} from \"@angular/common\";\nimport {JwtUtil} from \"../../../../util/JwtUtil\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {Observable} from \"rxjs\";\nimport {UserData} from \"../../../../models/request/UserData\";\nimport {PersonalService} from \"../../../../services/PersonalService\";\n\n@Component({\n  selector: 'app-team-page',\n  standalone: true,\n  templateUrl: './team-page.component.html',\n  imports: [\n    NgIf,\n    FormsModule,\n    ReactiveFormsModule,\n    AsyncPipe,\n    NgForOf\n  ],\n  styleUrls: ['./team-page.component.css']\n})\nexport class TeamPageComponent implements OnInit {\n\n\n  teamId: number | undefined;\n  teamUUID: string | undefined;\n  team: TeamData | undefined;\n  public userInviteLink: string| undefined;\n\n  public isOwner: boolean = false;\n  public avatarWindowOpen: boolean = false\n  public addPlayerWindowOpen : boolean = false;\n  public isLoaded: boolean = false;\n\n  uploadImage : File | undefined;\n  imageUrl: string | undefined;\n  isHasImage: boolean = false;\n\n  users$: Observable<UserData[]>| undefined;\n  public logoDataMap: { [key: number]: string } = {};\n  public isHasLogoMap: {[key: number] : boolean} = {}\n  public isCopied: boolean = false;\n\n  constructor(private teamService:TeamService,\n              private route: ActivatedRoute,\n              private jwtUtil:JwtUtil,\n              private router: Router,\n              private personalService:PersonalService,\n              ) {\n    this.route.params.subscribe(value => {\n      this.teamId = value['id']\n    })\n\n  }\n\n  ngOnInit(): void {\n    this.teamService.getTeamLogo(this.teamId).subscribe( res =>{\n        this.imageUrl = 'data:image/jpeg;base64,' + res.data;\n        this.isHasImage = true;\n      }\n    )\n    this.teamService.findById(this.teamId).subscribe(value => {\n      this.team = value\n      this.isOwner = value.adminId == this.jwtUtil.getId();\n      this.teamUUID = value.token;\n      this.userInviteLink= `http://localhost:4200/teams/${this.teamId}/${this.teamUUID}/inviteLink`\n      },error => {\n      if (error.error == \"Team not found\") {\n        this.router.navigateByUrl('error/404')\n      }\n    }\n    )\n    console.log(this.teamId)\n    this.users$ = this.teamService.getUsersByTeam(this.teamId)\n    this.loadLogos()\n    setTimeout(() => {\n      this.isLoaded = true;\n    }, 500);\n    console.log(this.isLoaded)\n    console.log(this.isOwner)\n  }\n  changeAvatar(){\n    if (this.isOwner)\n      this.avatarWindowOpen = true\n  }\n\n  public onImageUpload(event:Event) {\n    if (event && event.target){\n      // @ts-ignore\n      this.uploadImage = event.target.files[0];\n    }\n  }\n  public submitImage() {\n    this.avatarWindowOpen = false;\n    this.teamService.setTeamLogo(this.uploadImage, this.teamId).subscribe(() =>{\n        this.teamService.getTeamLogo(this.teamId).subscribe( res =>{\n            this.imageUrl = 'data:image/jpeg;base64,' + res.data;\n            this.isHasImage = true;\n          }\n        )\n      }\n\n    )\n  }\n\n  loadLogos(): void {\n    if (this.users$)\n      this.users$.forEach(value => {\n        value.forEach(value1 => {\n          this.personalService.getAvatar(value1.id).subscribe(\n            value2 => {\n              this.logoDataMap[value1.id] = 'data:image/jpeg;base64,' + value2.data\n              this.isHasLogoMap[value1.id] = true;\n            }\n            ,error => {\n              this.isHasLogoMap[value1.id] = false\n            }\n          )\n        })\n      })\n\n  }\n  getLogo(id: number): string {\n    return this.logoDataMap[id]\n  }\n\n  redirectToPage(url:string){\n    this.router.navigateByUrl(url);\n  }\n\n  addPlayer() {\n    if (this.isOwner) {\n      this.addPlayerWindowOpen = true\n\n    }\n  }\n  copyInviteLink() {\n    if (this.userInviteLink)\n    navigator.clipboard.writeText(this.userInviteLink).then(() => {\n      console.log('Link copied to clipboard successfully.');\n    }).catch((error) => {\n      console.error('Unable to copy link to clipboard. Error:', error);\n    });\n    this.isCopied = true;\n    setTimeout(() => {\n      this.isCopied = false;\n    }, 500);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}