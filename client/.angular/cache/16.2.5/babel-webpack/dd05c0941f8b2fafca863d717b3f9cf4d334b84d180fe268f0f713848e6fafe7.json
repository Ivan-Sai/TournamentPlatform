{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { NgIf, NgStyle } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nexport let UserProfileComponent = class UserProfileComponent {\n  constructor(route, jwtUtil, personalService) {\n    this.route = route;\n    this.jwtUtil = jwtUtil;\n    this.personalService = personalService;\n    this.isHasImage = false;\n    this.avatarWindowOpen = false;\n    this.route.params.subscribe(value => {\n      this.userId = value['id'];\n    });\n    this.isOwner = jwtUtil.getId() == this.userId;\n    this.personalService.getUserData(this.userId).subscribe(value => {\n      this.userData = value;\n      console.log(this.userData);\n    });\n  }\n  ngOnInit() {\n    this.personalService.getAvatar(this.userId).subscribe(res => {\n      this.imageUrl = 'data:image/jpeg;base64,' + res.data;\n      this.isHasImage = true;\n    });\n  }\n  changeAvatar() {\n    this.avatarWindowOpen = true;\n  }\n  onImageUpload(event) {\n    if (event && event.target) {\n      // @ts-ignore\n      this.uploadImage = event.target.files[0];\n    }\n  }\n  submitImage() {\n    this.avatarWindowOpen = false;\n    this.personalService.setPersonalAvatar(this.uploadImage, this.userId).subscribe(() => {\n      this.personalService.getAvatar(this.userId).subscribe(res => {\n        this.imageUrl = 'data:image/jpeg;base64,' + res.data;\n        this.isHasImage = true;\n      });\n    });\n  }\n};\nUserProfileComponent = __decorate([Component({\n  selector: 'app-user-profile',\n  standalone: true,\n  templateUrl: './user-profile.component.html',\n  imports: [NgStyle, NgIf, FormsModule, ReactiveFormsModule],\n  styleUrls: ['./user-profile.component.css']\n})], UserProfileComponent);","map":{"version":3,"names":["Component","NgIf","NgStyle","FormsModule","ReactiveFormsModule","UserProfileComponent","constructor","route","jwtUtil","personalService","isHasImage","avatarWindowOpen","params","subscribe","value","userId","isOwner","getId","getUserData","userData","console","log","ngOnInit","getAvatar","res","imageUrl","data","changeAvatar","onImageUpload","event","target","uploadImage","files","submitImage","setPersonalAvatar","__decorate","selector","standalone","templateUrl","imports","styleUrls"],"sources":["C:\\Users\\Ivan\\java\\final_project\\client\\src\\app\\pages\\open\\user-profile\\user-profile.component.ts"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {JwtUtil} from \"../../../util/JwtUtil\";\nimport {UserData} from \"../../../models/request/UserData\";\nimport {PersonalService} from \"../../../services/PersonalService\";\nimport {NgIf, NgStyle} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-user-profile',\n  standalone: true,\n  templateUrl: './user-profile.component.html',\n  imports: [\n    NgStyle,\n    NgIf,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit{\n\n  public userId: number | undefined;\n  public isOwner: boolean;\n  public userData: UserData |undefined;\n  public imageUrl: string | undefined;\n  public isHasImage: boolean = false;\n  public uploadImage: File | undefined;\n\n  public avatarWindowOpen: boolean = false;\n\n\n  constructor(private route: ActivatedRoute,\n              private jwtUtil: JwtUtil,\n              private personalService:PersonalService) {\n    this.route.params.subscribe(value => {\n      this.userId = value['id']\n    })\n    this.isOwner = jwtUtil.getId() == this.userId;\n    this.personalService.getUserData(this.userId).subscribe(value => {\n      this.userData = value;\n      console.log(this.userData)\n    })\n  }\n\n  ngOnInit(): void {\n    this.personalService.getAvatar(this.userId).subscribe( res =>{\n        this.imageUrl = 'data:image/jpeg;base64,' + res.data;\n        this.isHasImage = true;\n      }\n    )\n  }\n\n  changeAvatar(){\n    this.avatarWindowOpen = true\n  }\n\n  public onImageUpload(event:Event) {\n    if (event && event.target){\n      // @ts-ignore\n      this.uploadImage = event.target.files[0];\n    }\n  }\n  public submitImage() {\n    this.avatarWindowOpen = false;\n    this.personalService.setPersonalAvatar(this.uploadImage, this.userId).subscribe(() =>{\n      this.personalService.getAvatar(this.userId).subscribe( res =>{\n          this.imageUrl = 'data:image/jpeg;base64,' + res.data;\n          this.isHasImage = true;\n        }\n      )\n      }\n\n    )\n  }\n}\n"],"mappings":";AAAA,SAAQA,SAAS,QAAe,eAAe;AAK/C,SAAQC,IAAI,EAAEC,OAAO,QAAO,iBAAiB;AAC7C,SAAQC,WAAW,EAAEC,mBAAmB,QAAO,gBAAgB;AAcxD,WAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAY/BC,YAAoBC,KAAqB,EACrBC,OAAgB,EAChBC,eAA+B;IAF/B,KAAAF,KAAK,GAALA,KAAK;IACL,KAAAC,OAAO,GAAPA,OAAO;IACP,KAAAC,eAAe,GAAfA,eAAe;IAR5B,KAAAC,UAAU,GAAY,KAAK;IAG3B,KAAAC,gBAAgB,GAAY,KAAK;IAMtC,IAAI,CAACJ,KAAK,CAACK,MAAM,CAACC,SAAS,CAACC,KAAK,IAAG;MAClC,IAAI,CAACC,MAAM,GAAGD,KAAK,CAAC,IAAI,CAAC;IAC3B,CAAC,CAAC;IACF,IAAI,CAACE,OAAO,GAAGR,OAAO,CAACS,KAAK,EAAE,IAAI,IAAI,CAACF,MAAM;IAC7C,IAAI,CAACN,eAAe,CAACS,WAAW,CAAC,IAAI,CAACH,MAAM,CAAC,CAACF,SAAS,CAACC,KAAK,IAAG;MAC9D,IAAI,CAACK,QAAQ,GAAGL,KAAK;MACrBM,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,QAAQ,CAAC;IAC5B,CAAC,CAAC;EACJ;EAEAG,QAAQA,CAAA;IACN,IAAI,CAACb,eAAe,CAACc,SAAS,CAAC,IAAI,CAACR,MAAM,CAAC,CAACF,SAAS,CAAEW,GAAG,IAAG;MACzD,IAAI,CAACC,QAAQ,GAAG,yBAAyB,GAAGD,GAAG,CAACE,IAAI;MACpD,IAAI,CAAChB,UAAU,GAAG,IAAI;IACxB,CAAC,CACF;EACH;EAEAiB,YAAYA,CAAA;IACV,IAAI,CAAChB,gBAAgB,GAAG,IAAI;EAC9B;EAEOiB,aAAaA,CAACC,KAAW;IAC9B,IAAIA,KAAK,IAAIA,KAAK,CAACC,MAAM,EAAC;MACxB;MACA,IAAI,CAACC,WAAW,GAAGF,KAAK,CAACC,MAAM,CAACE,KAAK,CAAC,CAAC,CAAC;;EAE5C;EACOC,WAAWA,CAAA;IAChB,IAAI,CAACtB,gBAAgB,GAAG,KAAK;IAC7B,IAAI,CAACF,eAAe,CAACyB,iBAAiB,CAAC,IAAI,CAACH,WAAW,EAAE,IAAI,CAAChB,MAAM,CAAC,CAACF,SAAS,CAAC,MAAK;MACnF,IAAI,CAACJ,eAAe,CAACc,SAAS,CAAC,IAAI,CAACR,MAAM,CAAC,CAACF,SAAS,CAAEW,GAAG,IAAG;QACzD,IAAI,CAACC,QAAQ,GAAG,yBAAyB,GAAGD,GAAG,CAACE,IAAI;QACpD,IAAI,CAAChB,UAAU,GAAG,IAAI;MACxB,CAAC,CACF;IACD,CAAC,CAEF;EACH;CACD;AAvDYL,oBAAoB,GAAA8B,UAAA,EAZhCnC,SAAS,CAAC;EACToC,QAAQ,EAAE,kBAAkB;EAC5BC,UAAU,EAAE,IAAI;EAChBC,WAAW,EAAE,+BAA+B;EAC5CC,OAAO,EAAE,CACPrC,OAAO,EACPD,IAAI,EACJE,WAAW,EACXC,mBAAmB,CACpB;EACDoC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACWnC,oBAAoB,CAuDhC"},"metadata":{},"sourceType":"module","externalDependencies":[]}